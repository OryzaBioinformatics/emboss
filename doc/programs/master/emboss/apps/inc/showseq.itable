<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left" colspan=2>Standard (Mandatory) qualifiers</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr>
<td>[-sequence]<br>(Parameter 1)</td>
<td>(Gapped) nucleotide sequence(s) filename and optional format, or reference (input USA)</td>
<td>Readable sequence(s)</td>
<td><b>Required</b></td>
</tr>

<tr>
<td>-format</td>
<td>Display format</td>
<td><table><tr><td>0</td> <td><i>(Enter your own list of things to display)</i></td></tr><tr><td>1</td> <td><i>(Sequence only)</i></td></tr><tr><td>2</td> <td><i>(Default sequence with features)</i></td></tr><tr><td>3</td> <td><i>(Pretty sequence)</i></td></tr><tr><td>4</td> <td><i>(One frame translation)</i></td></tr><tr><td>5</td> <td><i>(Three frame translations)</i></td></tr><tr><td>6</td> <td><i>(Six frame translations)</i></td></tr><tr><td>7</td> <td><i>(Restriction enzyme map)</i></td></tr><tr><td>8</td> <td><i>(Baroque)</i></td></tr></table></td>
<td>2</td>
</tr>

<tr>
<td>-things</td>
<td>Specify a list of one or more code characters in the order in which you wish things to be displayed one above the other down the page. For example if you wish to see things displayed in the order: sequence, complement sequence, ticks line, frame 1 translation, blank line; then you should enter 'S,C,T,1,B'.</td>
<td><table><tr><td>S</td> <td><i>(Sequence)</i></td></tr><tr><td>B</td> <td><i>(Blank line)</i></td></tr><tr><td>1</td> <td><i>(Frame1 translation)</i></td></tr><tr><td>2</td> <td><i>(Frame2 translation)</i></td></tr><tr><td>3</td> <td><i>(Frame3 translation)</i></td></tr><tr><td>-1</td> <td><i>(CompFrame1 translation)</i></td></tr><tr><td>-2</td> <td><i>(CompFrame2 translation)</i></td></tr><tr><td>-3</td> <td><i>(CompFrame3 translation)</i></td></tr><tr><td>T</td> <td><i>(Ticks line)</i></td></tr><tr><td>N</td> <td><i>(Number ticks line)</i></td></tr><tr><td>C</td> <td><i>(Complement sequence)</i></td></tr><tr><td>F</td> <td><i>(Features)</i></td></tr><tr><td>R</td> <td><i>(Restriction enzyme cut sites in forward sense)</i></td></tr><tr><td>-R</td> <td><i>(Restriction enzyme cut sites in reverse sense)</i></td></tr><tr><td>A</td> <td><i>(Annotation)</i></td></tr></table></td>
<td>B,N,T,S,A,F</td>
</tr>

<tr>
<td>[-outfile]<br>(Parameter 2)</td>
<td>Output file name</td>
<td>Output file</td>
<td><i>&lt;*&gt;</i>.showseq</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=2>Additional (Optional) qualifiers</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr>
<td>-translate</td>
<td>Regions to translate (if translating).
If this is left blank the complete sequence is translated.
A set of regions is specified by a set of pairs of positions.
The positions are integers.
They are separated by any non-digit, non-alpha character.
Examples of region specifications are:
24-45, 56-78
1:45, 67=99;765..888</td>
<td>Sequence range</td>
<td>If this is left blank the complete sequence is translated.</td>
</tr>

<tr>
<td>-revtranslate</td>
<td>Regions to translate (if translating).
If this is left blank the complete sequence is translated.
A set of regions is specified by a set of pairs of positions.
The positions are integers.
They are separated by any non-digit, non-alpha character.
Examples of region specifications are:
78-56, 45-24,
888..765, 99=67; 45:1</td>
<td>Sequence range</td>
<td>If this is left blank the complete reverse sequence is translated.</td>
</tr>

<tr>
<td>-uppercase</td>
<td>Regions to put in uppercase.
If this is left blank, then the sequence case is left alone.
A set of regions is specified by a set of pairs of positions.
The positions are integers.
They are separated by any non-digit, non-alpha character.
Examples of region specifications are:
24-45, 56-78
1:45, 67=99;765..888
1,5,8,10,23,45,57,99</td>
<td>Sequence range</td>
<td>If this is left blank, then the sequence case is left alone.</td>
</tr>

<tr>
<td>-highlight</td>
<td>Regions to colour if formatting for HTML.
If this is left blank, then the sequence is left alone.
A set of regions is specified by a set of pairs of positions.
The positions are integers.
They are followed by any valid HTML font colour.
Examples of region specifications are:
24-45 blue 56-78 orange
1-100 green 120-156 red
A file of ranges to colour (one range per line) can be specified as '@filename'.</td>
<td>Sequence range</td>
<td><i>full sequence</i></td>
</tr>

<tr>
<td>-annotation</td>
<td>Regions to annotate by marking.
If this is left blank, then no annotation is added.
A set of regions is specified by a set of pairs of positions followed by optional text.
The positions are integers.
They are followed by any text (but not digits when on the command-line).
Examples of region specifications are:
24-45 new domain 56-78 match to Mouse
1-100 First part 120-156 oligo
A file of ranges to annotate (one range per line) can be specified as '@filename'.</td>
<td>Sequence range</td>
<td>If this is left blank, then no annotation is added.</td>
</tr>

<tr>
<td>-enzymes</td>
<td>The name 'all' reads in all enzyme names from the REBASE database. You can specify enzymes by giving their names with commas between then, such as: 'HincII,hinfI,ppiI,hindiii'.
The case of the names is not important. You can specify a file of enzyme names to read in by giving the name of the file holding the enzyme names with a '@' character in front of it, for example, '@enz.list'.
Blank lines and lines starting with a hash character or '!' are ignored and all other lines are concatenated together with a comma character ',' and then treated as the list of enzymes to search for.
An example of a file of enzyme names is:
! my enzymes
HincII, ppiII
! other enzymes
hindiii
HinfI
PpiI</td>
<td>Any string is accepted</td>
<td>all</td>
</tr>

<tr>
<td>-table</td>
<td>Genetic code to use</td>
<td><table><tr><td>0</td> <td><i>(Standard)</i></td></tr><tr><td>1</td> <td><i>(Standard (with alternative initiation codons))</i></td></tr><tr><td>2</td> <td><i>(Vertebrate Mitochondrial)</i></td></tr><tr><td>3</td> <td><i>(Yeast Mitochondrial)</i></td></tr><tr><td>4</td> <td><i>(Mold, Protozoan, Coelenterate Mitochondrial and Mycoplasma/Spiroplasma)</i></td></tr><tr><td>5</td> <td><i>(Invertebrate Mitochondrial)</i></td></tr><tr><td>6</td> <td><i>(Ciliate Macronuclear and Dasycladacean)</i></td></tr><tr><td>9</td> <td><i>(Echinoderm Mitochondrial)</i></td></tr><tr><td>10</td> <td><i>(Euplotid Nuclear)</i></td></tr><tr><td>11</td> <td><i>(Bacterial)</i></td></tr><tr><td>12</td> <td><i>(Alternative Yeast Nuclear)</i></td></tr><tr><td>13</td> <td><i>(Ascidian Mitochondrial)</i></td></tr><tr><td>14</td> <td><i>(Flatworm Mitochondrial)</i></td></tr><tr><td>15</td> <td><i>(Blepharisma Macronuclear)</i></td></tr><tr><td>16</td> <td><i>(Chlorophycean Mitochondrial)</i></td></tr><tr><td>21</td> <td><i>(Trematode Mitochondrial)</i></td></tr><tr><td>22</td> <td><i>(Scenedesmus obliquus)</i></td></tr><tr><td>23</td> <td><i>(Thraustochytrium Mitochondrial)</i></td></tr></table></td>
<td>0</td>
</tr>

<tr>
<td>-sourcematch</td>
<td>By default any feature source in the feature table is shown. You can set this to match any feature source you wish to show.
The source name is usually either the name of the program that detected the feature or it is the feature table (eg: EMBL) that the feature came from.
The source may be wildcarded by using '*'.
If you wish to show more than one source, separate their names with the character '|', eg:
gene* | embl</td>
<td>Any string is accepted</td>
<td>*</td>
</tr>

<tr>
<td>-typematch</td>
<td>By default any feature type in the feature table is shown. You can set this to match any feature type you wish to show.
See http://www3.ebi.ac.uk/Services/WebFeat/ for a list of the EMBL feature types and see Appendix A of the Swissprot user manual in http://www.expasy.ch/txt/userman.txt for a list of the Swissprot feature types.
The type may be wildcarded by using '*'.
If you wish to show more than one type, separate their names with the character '|', eg:
*UTR | intron</td>
<td>Any string is accepted</td>
<td>*</td>
</tr>

<tr>
<td>-sensematch</td>
<td>By default any feature type in the feature table is shown. You can set this to match any feature sense you wish to show. 0 - any sense, 1 - forward sense, -1 - reverse sense</td>
<td>Any integer value</td>
<td>0 - any sense, 1 - forward sense, -1 - reverse sense</td>
</tr>

<tr>
<td>-minscore</td>
<td>Minimum score of feature to display (see also maxscore)</td>
<td>Any numeric value</td>
<td>0.0</td>
</tr>

<tr>
<td>-maxscore</td>
<td>Maximum score of feature to display.
If both minscore and maxscore are zero (the default), then any score is ignored</td>
<td>Any numeric value</td>
<td>0.0</td>
</tr>

<tr>
<td>-tagmatch</td>
<td>Tags are the types of extra values that a feature may have. For example in the EMBL feature table, a 'CDS' type of feature may have the tags '/codon', '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception', '/function', '/gene', '/label', '/map', '/note', '/number', '/partial', '/product', '/protein_id', '/pseudo', '/standard_name', '/translation', '/transl_except', '/transl_table', or '/usedin'. Some of these tags also have values, for example '/gene' can have the value of the gene name.
By default any feature tag in the feature table is shown. You can set this to match any feature tag you wish to show.
The tag may be wildcarded by using '*'.
If you wish to show more than one tag, separate their names with the character '|', eg:
gene | label</td>
<td>Any string is accepted</td>
<td>*</td>
</tr>

<tr>
<td>-valuematch</td>
<td>Tag values are the values associated with a feature tag. Tags are the types of extra values that a feature may have. For example in the EMBL feature table, a 'CDS' type of feature may have the tags '/codon', '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception', '/function', '/gene', '/label', '/map', '/note', '/number', '/partial', '/product', '/protein_id', '/pseudo', '/standard_name', '/translation', '/transl_except', '/transl_table', or '/usedin'. Only some of these tags can have values, for example '/gene' can have the value of the gene name. By default any feature tag value in the feature table is shown. You can set this to match any feature tag valueyou wish to show.
The tag value may be wildcarded by using '*'.
If you wish to show more than one tag value, separate their names with the character '|', eg:
pax* | 10</td>
<td>Any string is accepted</td>
<td>*</td>
</tr>

<tr>
<td>-stricttags</td>
<td>By default if any tag/value pair in a feature matches the specified tag and value, then all the tags/value pairs of that feature will be displayed. If this is set to be true, then only those tag/value pairs in a feature that match the specified tag and value will be displayed.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=2>Advanced (Unprompted) qualifiers</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr>
<td>-mfile</td>
<td>Restriction enzyme data file (optional)</td>
<td>Data file</td>
<td>Emethylsites.dat</td>
</tr>

<tr>
<td>-flatreformat</td>
<td>This changes the output format to one where the recognition site is indicated by a row of '===' characters and the cut site is pointed to by a '&gt;' character in the forward sense, or a '&lt;' in the reverse sense strand.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-mincuts</td>
<td>This sets the minimum number of cuts for any restriction enzyme that will be considered. Any enzymes that cut fewer times than this will be ignored.</td>
<td>Integer from 1 to 1000</td>
<td>1</td>
</tr>

<tr>
<td>-maxcuts</td>
<td>This sets the maximum number of cuts for any restriction enzyme that will be considered. Any enzymes that cut more times than this will be ignored.</td>
<td>Integer up to 2000000000</td>
<td>2000000000</td>
</tr>

<tr>
<td>-sitelen</td>
<td>This sets the minimum length of the restriction enzyme recognition site. Any enzymes with sites shorter than this will be ignored.</td>
<td>Integer from 2 to 20</td>
<td>4</td>
</tr>

<tr>
<td>-single</td>
<td>If this is set then this forces the values of the mincuts and maxcuts qualifiers to both be 1. Any other value you may have set them to will be ignored.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-[no]blunt</td>
<td>This allows those enzymes which cut at the same position on the forward and reverse strands to be considered.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-[no]sticky</td>
<td>This allows those enzymes which cut at different positions on the forward and reverse strands, leaving an overhang, to be considered.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-[no]ambiguity</td>
<td>This allows those enzymes which have one or more 'N' ambiguity codes in their pattern to be considered</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-plasmid</td>
<td>If this is set then this allows searches for restriction enzyme recognition site and cut postions that span the end of the sequence to be considered.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-methylation</td>
<td>If this is set then RE recognition sites will not match methylated bases.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-[no]commercial</td>
<td>If this is set, then only those enzymes with a commercial supplier will be searched for. This qualifier is ignored if you have specified an explicit list of enzymes to search for, rather than searching through 'all' the enzymes in the REBASE database. It is assumed that, if you are asking for an explicit enzyme, then you probably know where to get it from and so all enzymes names that you have asked to be searched for, and which cut, will be reported whether or not they have a commercial supplier.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-[no]limit</td>
<td>This limits the reporting of enzymes to just one enzyme from each group of isoschizomers. The enzyme chosen to represent an isoschizomer group is the prototype indicated in the data file 'embossre.equ', which is created by the program 'rebaseextract'. If you prefer different prototypes to be used, make a copy of embossre.equ in your home directory and edit it. If this value is set to be false then all of the input enzymes will be reported. You might like to set this to false if you are supplying an explicit set of enzymes rather than searching 'all' of them.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-orfminsize</td>
<td>This sets the minimum size of Open Reading Frames (ORFs) to display in the translations. All other translation regions are masked by changing the amino acids to '-' characters.</td>
<td>Integer 0 or more</td>
<td>0</td>
</tr>

<tr>
<td>-threeletter</td>
<td>Display protein sequences in three-letter code</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-number</td>
<td>Number the sequences</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr>
<td>-width</td>
<td>Width of sequence to display</td>
<td>Integer 1 or more</td>
<td>60</td>
</tr>

<tr>
<td>-length</td>
<td>Line length of page (0 for indefinite)</td>
<td>Integer 0 or more</td>
<td>0</td>
</tr>

<tr>
<td>-margin</td>
<td>Margin around sequence for numbering</td>
<td>Integer 0 or more</td>
<td>10</td>
</tr>

<tr>
<td>-[no]name</td>
<td>Set this to be false if you do not wish to display the ID name of the sequence</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-[no]description</td>
<td>Set this to be false if you do not wish to display the description of the sequence</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr>
<td>-offset</td>
<td>Offset to start numbering the sequence from</td>
<td>Any integer value</td>
<td>1</td>
</tr>

<tr>
<td>-html</td>
<td>Use HTML formatting</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

</table>
