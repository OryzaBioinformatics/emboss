<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-sequence]<br>(Parameter 1)</td>
<td>seqall</td>
<td>(Gapped) sequence(s) filename and optional format, or reference (input USA)</td>
<td>Readable sequence(s)</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>-outfile</td>
<td>outfile</td>
<td>If you enter the name of a file here then this program will write the sequence details into that file.</td>
<td>Output file</td>
<td>stdout</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-html</td>
<td>boolean</td>
<td>Format output as an HTML table</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>-[no]columns</td>
<td>boolean</td>
<td>Set this option on (Y) to print the sequence information into neat, aligned columns in the output file. Alternatively, leave it unset (N), in which case the information records will be delimited by a character, which you may specify by using the -delimiter option. In other words, if -columns is set on, the -delimiter option is overriden.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-delimiter</td>
<td>string</td>
<td>This string, which is usually a single character only, is used to delimit individual records in the text output file. It could be a space character, a tab character, a pipe character or any other character or string.</td>
<td>Any string</td>
<td>|</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-only</td>
<td>boolean</td>
<td>This is a way of shortening the command line if you only want a few things to be displayed. Instead of specifying:
'-nohead -noname -noacc -notype -nopgc -nodesc'
to get only the length output, you can specify
'-only -length'</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-[no]heading</td>
<td>boolean</td>
<td>Display column headings</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-usa</td>
<td>boolean</td>
<td>Display the USA of the sequence</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-database</td>
<td>boolean</td>
<td>Display 'database' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-name</td>
<td>boolean</td>
<td>Display 'name' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-accession</td>
<td>boolean</td>
<td>Display 'accession' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-gi</td>
<td>boolean</td>
<td>Display 'GI' column</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-seqversion</td>
<td>boolean</td>
<td>Display 'version' column</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-type</td>
<td>boolean</td>
<td>Display 'type' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-length</td>
<td>boolean</td>
<td>Display 'length' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-pgc</td>
<td>boolean</td>
<td>Display 'percent GC content' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-organism</td>
<td>boolean</td>
<td>Display 'organism' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-description</td>
<td>boolean</td>
<td>Display 'description' column</td>
<td>Boolean value Yes/No</td>
<td>@(!$(only))</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-sequence" associated seqall qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sbegin1<br>-sbegin_sequence</td>
<td>integer</td>
<td>Start of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -send1<br>-send_sequence</td>
<td>integer</td>
<td>End of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sreverse1<br>-sreverse_sequence</td>
<td>boolean</td>
<td>Reverse (if DNA)</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sask1<br>-sask_sequence</td>
<td>boolean</td>
<td>Ask for begin/end/reverse</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -snucleotide1<br>-snucleotide_sequence</td>
<td>boolean</td>
<td>Sequence is nucleotide</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sprotein1<br>-sprotein_sequence</td>
<td>boolean</td>
<td>Sequence is protein</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -slower1<br>-slower_sequence</td>
<td>boolean</td>
<td>Make lower case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -supper1<br>-supper_sequence</td>
<td>boolean</td>
<td>Make upper case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sformat1<br>-sformat_sequence</td>
<td>string</td>
<td>Input sequence format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sdbname1<br>-sdbname_sequence</td>
<td>string</td>
<td>Database name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sid1<br>-sid_sequence</td>
<td>string</td>
<td>Entryname</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -ufo1<br>-ufo_sequence</td>
<td>string</td>
<td>UFO features</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fformat1<br>-fformat_sequence</td>
<td>string</td>
<td>Features format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fopenfile1<br>-fopenfile_sequence</td>
<td>string</td>
<td>Features file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-outfile" associated outfile qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -odirectory</td>
<td>string</td>
<td>Output directory</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
