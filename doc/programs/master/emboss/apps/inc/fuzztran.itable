<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-sequence]<br>(Parameter 1)</td>
<td>seqall</td>
<td>Nucleotide sequence(s) filename and optional format, or reference (input USA)</td>
<td>Readable sequence(s)</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-pattern</td>
<td>pattern</td>
<td>The standard IUPAC one-letter codes for the amino acids are used.
The symbol 'x' is used for a position where any amino acid is accepted.
Ambiguities are indicated by listing the acceptable amino acids for a given position, between square parentheses '[ ]'. For example: [ALT] stands for Ala or Leu or Thr.
Ambiguities are also indicated by listing between a pair of curly brackets '{ }' the amino acids that are not accepted at a gven position. For example: {AM} stands for any amino acid except Ala and Met.
Each element in a pattern is separated from its neighbor by a '-'. (Optional in fuzztran)
Repetition of an element of the pattern can be indicated by following that element with a numerical value or a numerical range between parenthesis. Examples: x(3) corresponds to x-x-x, x(2,4) corresponds to x-x or x-x-x or x-x-x-x.
When a pattern is restricted to either the N- or C-terminal of a sequence, that pattern either starts with a '&lt;' symbol or respectively ends with a '&gt;' symbol.
A period ends the pattern. (Optional in fuzztran).
For example, [DE](2)HS{P}X(2)PX(2,4)C</td>
<td>Property value(s)</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-outfile]<br>(Parameter 2)</td>
<td>report</td>
<td>Output report file name</td>
<td>Report output file</td>
<td><i>&lt;*&gt;</i>.fuzztran</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>-frame</td>
<td>list</td>
<td>Frame(s) to translate</td>
<td><table><tr><td>1</td> <td><i>(1)</i></td></tr><tr><td>2</td> <td><i>(2)</i></td></tr><tr><td>3</td> <td><i>(3)</i></td></tr><tr><td>F</td> <td><i>(Forward three frames)</i></td></tr><tr><td>-1</td> <td><i>(-1)</i></td></tr><tr><td>-2</td> <td><i>(-2)</i></td></tr><tr><td>-3</td> <td><i>(-3)</i></td></tr><tr><td>R</td> <td><i>(Reverse three frames)</i></td></tr><tr><td>6</td> <td><i>(All six frames)</i></td></tr></table></td>
<td>1</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-table</td>
<td>list</td>
<td>Code to use</td>
<td><table><tr><td>0</td> <td><i>(Standard)</i></td></tr><tr><td>1</td> <td><i>(Standard (with alternative initiation codons))</i></td></tr><tr><td>2</td> <td><i>(Vertebrate Mitochondrial)</i></td></tr><tr><td>3</td> <td><i>(Yeast Mitochondrial)</i></td></tr><tr><td>4</td> <td><i>(Mold, Protozoan, Coelenterate Mitochondrial and Mycoplasma/Spiroplasma)</i></td></tr><tr><td>5</td> <td><i>(Invertebrate Mitochondrial)</i></td></tr><tr><td>6</td> <td><i>(Ciliate Macronuclear and Dasycladacean)</i></td></tr><tr><td>9</td> <td><i>(Echinoderm Mitochondrial)</i></td></tr><tr><td>10</td> <td><i>(Euplotid Nuclear)</i></td></tr><tr><td>11</td> <td><i>(Bacterial)</i></td></tr><tr><td>12</td> <td><i>(Alternative Yeast Nuclear)</i></td></tr><tr><td>13</td> <td><i>(Ascidian Mitochondrial)</i></td></tr><tr><td>14</td> <td><i>(Flatworm Mitochondrial)</i></td></tr><tr><td>15</td> <td><i>(Blepharisma Macronuclear)</i></td></tr><tr><td>16</td> <td><i>(Chlorophycean Mitochondrial)</i></td></tr><tr><td>21</td> <td><i>(Trematode Mitochondrial)</i></td></tr><tr><td>22</td> <td><i>(Scenedesmus obliquus)</i></td></tr><tr><td>23</td> <td><i>(Thraustochytrium Mitochondrial)</i></td></tr></table></td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-sequence" associated seqall qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sbegin1<br>-sbegin_sequence</td>
<td>integer</td>
<td>Start of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -send1<br>-send_sequence</td>
<td>integer</td>
<td>End of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sreverse1<br>-sreverse_sequence</td>
<td>boolean</td>
<td>Reverse (if DNA)</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sask1<br>-sask_sequence</td>
<td>boolean</td>
<td>Ask for begin/end/reverse</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -snucleotide1<br>-snucleotide_sequence</td>
<td>boolean</td>
<td>Sequence is nucleotide</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sprotein1<br>-sprotein_sequence</td>
<td>boolean</td>
<td>Sequence is protein</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -slower1<br>-slower_sequence</td>
<td>boolean</td>
<td>Make lower case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -supper1<br>-supper_sequence</td>
<td>boolean</td>
<td>Make upper case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sformat1<br>-sformat_sequence</td>
<td>string</td>
<td>Input sequence format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sdbname1<br>-sdbname_sequence</td>
<td>string</td>
<td>Database name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sid1<br>-sid_sequence</td>
<td>string</td>
<td>Entryname</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -ufo1<br>-ufo_sequence</td>
<td>string</td>
<td>UFO features</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fformat1<br>-fformat_sequence</td>
<td>string</td>
<td>Features format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fopenfile1<br>-fopenfile_sequence</td>
<td>string</td>
<td>Features file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-pattern" associated pattern qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -pformat</td>
<td>string</td>
<td>File format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -pmismatch</td>
<td>integer</td>
<td>Pattern mismatch</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -pname</td>
<td>string</td>
<td>Pattern base name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-outfile" associated report qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rformat2<br>-rformat_outfile</td>
<td>string</td>
<td>Report format</td>
<td>Any string</td>
<td>table</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rname2<br>-rname_outfile</td>
<td>string</td>
<td>Base file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rextension2<br>-rextension_outfile</td>
<td>string</td>
<td>File name extension</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rdirectory2<br>-rdirectory_outfile</td>
<td>string</td>
<td>Output directory</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -raccshow2<br>-raccshow_outfile</td>
<td>boolean</td>
<td>Show accession number in the report</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rdesshow2<br>-rdesshow_outfile</td>
<td>boolean</td>
<td>Show description in the report</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rscoreshow2<br>-rscoreshow_outfile</td>
<td>boolean</td>
<td>Show the score in the report</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rstrandshow2<br>-rstrandshow_outfile</td>
<td>boolean</td>
<td>Show the nucleotide strand in the report</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rusashow2<br>-rusashow_outfile</td>
<td>boolean</td>
<td>Show the full USA in the report</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rmaxall2<br>-rmaxall_outfile</td>
<td>integer</td>
<td>Maximum total hits to report</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -rmaxseq2<br>-rmaxseq_outfile</td>
<td>integer</td>
<td>Maximum hits to report for one sequence</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
