Write a sequence with masked regions
Version: EMBOSS:6.2.0

   Standard (Mandatory) qualifiers:
  [-sequence]          sequence   Sequence filename and optional format, or
                                  reference (input USA)
   -regions            range      [None] Regions to mask.
                                  A set of regions is specified by a set of
                                  pairs of positions.
                                  The positions are integers.
                                  They are separated by any non-digit,
                                  non-alpha character.
                                  Examples of region specifications are:
                                  24-45, 56-78
                                  1:45, 67=99;765..888
                                  1,5,8,10,23,45,57,99
  [-outseq]            seqout     [<sequence>.<format>] Sequence filename and
                                  optional format (output USA)

   Additional (Optional) qualifiers (* if not always prompted):
   -tolower            toggle     [N] The region can be 'masked' by converting
                                  the sequence characters to lower-case, some
                                  non-EMBOSS programs e.g. fasta can
                                  interpret this as a masked region. The
                                  sequence is unchanged apart from the case
                                  change. You might like to ensure that the
                                  whole sequence is in upper-case before
                                  masking the specified regions to lower-case
                                  by using the '-supper' flag.
*  -maskchar           string     ['X' for protein, 'N' for nucleic] Character
                                  to use when masking.
                                  Default is 'X' for protein sequences, 'N'
                                  for nucleic sequences.
                                  If the mask character is set to be the SPACE
                                  character or a null character, then the
                                  sequence is 'masked' by changing it to
                                  lower-case, just as with the '-lowercase'
                                  flag. (Any string from 1 to 1 characters)

   Advanced (Unprompted) qualifiers: (none)
   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of the sequence to be used
   -send1              integer    End of the sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outseq" associated qualifiers
   -osformat2          string     Output seq format
   -osextension2       string     File name extension
   -osname2            string     Base file name
   -osdirectory2       string     Output directory
   -osdbname2          string     Database name to add
   -ossingle2          boolean    Separate file for each entry
   -oufo2              string     UFO features
   -offormat2          string     Features format
   -ofname2            string     Features file name
   -ofdirectory2       string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages
   -version            boolean    Report version number and exit

