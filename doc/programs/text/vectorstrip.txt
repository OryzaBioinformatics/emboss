                                 vectorstrip



Wiki

   The master copies of EMBOSS documentation are available at
   http://emboss.open-bio.org/wiki/Appdocs on the EMBOSS Wiki.

   Please help by correcting and extending the Wiki pages.

Function

   Removes vectors from the ends of nucleotide sequence(s)

Description

   vectorstrip reads one or more nucleotide sequences and writes them out
   again but with any of a specified set of vector sequences removed from
   the 5' and 3' termini. An output file with a summary of the results is
   also written. The vector sequences to strip out are (typically)
   provided in an input file. The pair of 5' and 3' vector sequences are
   searched against each input sequence allowing a specified maximum level
   of mismatches. Each 5' hit is paired with each 3' hit and the resulting
   subsequences output. By default only the best match between the vector
   patterns and each sequence are reported. Optionally, all matches up to
   the specified maximum mismatch level are reported.

Usage

   Here is a sample session with vectorstrip


% vectorstrip @vecseqs.list
Removes vectors from the ends of nucleotide sequence(s)
Are your vector sequences in a file? [Y]:
Cloning vector definition file (optional): vectors
Max allowed % mismatch [10]:
Show only the best hits (minimise mismatches)? [Y]:
Output file [pbluescript.vectorstrip]: vector.strip
output sequence(s) [pbluescript.fasta]: vector.fasta


   Go to the input files for this example
   Go to the output files for this example

Command line arguments

Removes vectors from the ends of nucleotide sequence(s)
Version: EMBOSS:6.3.0

   Standard (Mandatory) qualifiers (* if not always prompted):
  [-sequence]          seqall     Nucleotide sequence(s) filename and optional
                                  format, or reference (input USA)
  [-[no]readfile]      toggle     [Y] Are your vector sequences in a file?
*  -vectorsfile        infile     Cloning vector definition file (optional)
   -mismatch           integer    [10] Max allowed % mismatch (Any integer
                                  value)
   -[no]besthits       boolean    [Y] Show only the best hits (minimise
                                  mismatches)?
*  -alinker            string     The 5' sequence (Any string)
*  -blinker            string     The 3' sequence (Any string)
  [-outfile]           outfile    [*.vectorstrip] Output file name
  [-outseq]            seqoutall  [.] Sequence set(s)
                                  filename and optional format (output USA)

   Additional (Optional) qualifiers:
   -allsequences       boolean    [N] Show all sequences in output

   Advanced (Unprompted) qualifiers: (none)
   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of each sequence to be used
   -send1              integer    End of each sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outfile" associated qualifiers
   -odirectory3        string     Output directory

   "-outseq" associated qualifiers
   -osformat4          string     Output seq format
   -osextension4       string     File name extension
   -osname4            string     Base file name
   -osdirectory4       string     Output directory
   -osdbname4          string     Database name to add
   -ossingle4          boolean    Separate file for each entry
   -oufo4              string     UFO features
   -offormat4          string     Features format
   -ofname4            string     Features file name
   -ofdirectory4       string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages
   -version            boolean    Report version number and exit


Input file format

  Input files for usage example

  File: vecseqs.list

../../data/bluescript.seq
../../data/litmus.seq
../../data/pTYB1.seq

  File: vectors

# Example vector file for use by vectorstrip

# Vector        5'                      3'

pTYB1   GACGGCGGCCGCGAATTCC     TCGAGGGCTCTTCCTGC
pBS_KS+ GGGTACCGGGCCCCCCC       TCGAGGTCGACGGTA
pLITMUS GATATCCTGCAGGAATTCC     TCGAGACCGTACGTGCG

   The same fragment has been cloned into the XhoI site of the polylinker
   of each vector. The cloned fragment is represented in lower case and
   the vector sequence in upper case so the sequence trimming can be
   readily seen.

   Each line of the vector file should contain the name of the vector, the
   5' pattern and the 3' pattern.
   Lines beginning with # are treated as comments and ignored.
   If only one vector sequence is given in the it will be assumed that
   this is the 5' pattern.
   If a vector name is given but no pattern data, the vector will not be
   used.

Output file format

  Output files for usage example

  File: vector.strip


Sequence: pBlueScript    Vector: pTYB1  No match


Sequence: pBlueScript    Vector: pBS_KS+
5' sequence matches:
        From 67 to 83 with 0 mismatches
3' sequence matches:
        From 205 to 219 with 0 mismatches
Sequences output to file:
        from 84 to 204
                tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagca
                cacagtgacatgagagacacagatatagagacagatagacgatagacaga
                cagcatatatagacagatagc
        sequence trimmed from 5' end:
                GGAAACAGCTAATGACCATGATTACGCCAAGCGCGCAATTAACCCTCACT
                AAAGGGAACAAAAGCTGGGTACCGGGCCCCCCC
        sequence trimmed from 3' end:
                TCGAGGTCGACGGTATCGATAAGCTTGATATCG


Sequence: pBlueScript    Vector: pLITMUS        No match

Sequence: litmus.seq     Vector: pTYB1  No match

Sequence: litmus.seq     Vector: pBS_KS+        No match


Sequence: litmus.seq     Vector: pLITMUS
5' sequence matches:
        From 43 to 61 with 0 mismatches
3' sequence matches:
        From 183 to 199 with 0 mismatches
Sequences output to file:
        from 62 to 182
                tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagca
                cacagtgacatgagagacacagatatagagacagatagacgatagacaga
                cagcatatatagacagatagc
        sequence trimmed from 5' end:
                TCTAGAACCGGTGACGTCTCCCATGGTGAAGCTTGGATCCACGATATCCT
                GCAGGAATTCC
        sequence trimmed from 3' end:
                TCGAGACCGTACGTGCGCGCGAATGCATCCAGATCTTCCCTCTAGTCAAG
                GCCTTAAGTGAGTCGTATTACGGA



Sequence: pTYB1.seq      Vector: pTYB1
5' sequence matches:
        From 40 to 58 with 0 mismatches
3' sequence matches:
        From 180 to 196 with 0 mismatches
Sequences output to file:
        from 59 to 179
                tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagca
                cacagtgacatgagagacacagatatagagacagatagacgatagacaga
                cagcatatatagacagatagc
        sequence trimmed from 5' end:
                CTTTAAGAAGGAGATATACATATGGCTAGCTCGCGAGTCGACGGCGGCCG
                CGAATTCC
        sequence trimmed from 3' end:
                TCGAGGGCTCTTCCTGCTTTGCCAAGGGTACCAATGTTTTAATGGCGGAT


Sequence: pTYB1.seq      Vector: pBS_KS+        No match

Sequence: pTYB1.seq      Vector: pLITMUS        No match

  File: vector.fasta

>pBlueScript_from_84_to_204 KS+
tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagcacacagtgaca
tgagagacacagatatagagacagatagacgatagacagacagcatatatagacagatag
c
>litmus.seq_from_62_to_182
tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagcacacagtgaca
tgagagacacagatatagagacagatagacgatagacagacagcatatatagacagatag
c
>pTYB1.seq_from_59_to_179
tcgagagccgtattgcgatatagcgcacatgcgttggacacagatgagcacacagtgaca
tgagagacacagatatagagacagatagacgatagacagacagcatatatagacagatag
c

   Two types of output file are produced:
    1. The sequence file(s) - contain the trimmed subsequence(s) produced
       by vectorstrip either all in one file, or in separate files if the
       command line flag -ossingle is used.
    2. Results summary file

Data files

   None.

Notes

   vectorstrip is intended for stripping vector sequence from the ends of
   sequences of interest. For example, if a fragment has been cloned into
   a vector and then sequenced, the sequence may contain vector data eg
   from the cloning polylinker at the 5' and 3' ends of the sequence.
   vectorstrip will remove these contaminating regions and output trimmed
   sequence ready for input into another application.

   vectorstrip is suitable for use with low quality sequence data as it
   can allow for mismatches between the sequence and the vector patterns
   provided. You can specify the maximum level of mismatch expected.

   Vector data can either be provided in a file or interactively. If
   presented in a file, vectorstrip will search all input sequences with
   all vectors listed in that file. The intention is that the user can
   maintain a single file for use with vectorstrip, containing all the
   linker sequences commonly used in the laboratory.

   The two patterns for each vector are searched separately against the
   sequence. Once the search is completed, each of the hits of the 5'
   sequence is paired with each of the hits of the 3' sequence and the
   resulting subsequences are output. For example, if the 5' sequence
   matches the sequence from (a) position 30-60, and(b)position 70-100,
   and the 3' sequence matches from 150-175, then two subsequences will be
   output: from 61-149, and from 101-149. The lower the quality of the
   sequence, the more likely multiple hits become if nonzero mismatches
   are accepted.

   Default behaviour is to report only the best matches between the vector
   patterns and the sequence. This means that if you specify a maximum
   mismatch level of 10%, but the vector patterns match the sequence with
   zero mismatches, the search will stop and the program will output only
   these "best" matches. If there are no perfect matches, the program will
   try searching again allowing 1 mismatch, then 2, and so on until either
   the patterns match the sequence or the maximum specified mismatch level
   is exceeded. You can tell vectorstrip to show all possible matches up
   to your specified maximum level, as illustrated in the examples below.

References

   None.

Warnings

   None.

Diagnostic Error Messages

    1.
No suitable vectors found - exiting
       indicates that the 5' and 3' patterns for the vectors were blank -
       usually this is as a result of an empty vectorfile.
    2.
Illegal pattern
       indicates that one of the vector patterns could not be compiled and
       therefore cannot be searched.
    3.
5' and 3' sequence matches are identical; inconclusive
       indicates that the 5' and 3' patterns provided were identical, and
       that they only match the sequence once. Thus the program cannot
       determine which part of the sequence is vector and which is insert.

Exit status

   It always exits with status 0.

Known bugs

   None.

See also

   Program name     Description
   aligncopy        Reads and writes alignments
   aligncopypair    Reads and writes pairs from alignments
   biosed           Replace or delete sequence sections
   codcopy          Copy and reformat a codon usage table
   cutseq           Removes a section from a sequence
   degapseq         Removes non-alphabetic (e.g. gap) characters from sequences
   descseq          Alter the name or description of a sequence
   entret           Retrieves sequence entries from flatfile databases and files
   extractalign     Extract regions from a sequence alignment
   extractfeat      Extract features from sequence(s)
   extractseq       Extract regions from a sequence
   featcopy         Reads and writes a feature table
   featreport       Reads and writes a feature table
   listor           Write a list file of the logical OR of two sets of sequences
   makenucseq       Create random nucleotide sequences
   makeprotseq      Create random protein sequences
   maskambignuc     Masks all ambiguity characters in nucleotide sequences
   with             N
   maskambigprot    Masks all ambiguity characters in protein sequences with
                    X
   maskfeat         Write a sequence with masked features
   maskseq          Write a sequence with masked regions
   newseq           Create a sequence file from a typed-in sequence
   nohtml           Remove mark-up (e.g. HTML tags) from an ASCII text file
   noreturn         Remove carriage return from ASCII files
   nospace          Remove whitespace from an ASCII text file
   notab            Replace tabs with spaces in an ASCII text file
   notseq           Write to file a subset of an input stream of sequences
   nthseq           Write to file a single sequence from an input stream of
                    sequences
   nthseqset        Reads and writes (returns) one set of sequences from many
   pasteseq         Insert one sequence into another
   revseq           Reverse and complement a nucleotide sequence
   seqret           Reads and writes (returns) sequences
   seqretsetall     Reads and writes (returns) many sets of sequences
   seqretsplit      Reads sequences and writes them to individual files
   sizeseq          Sort sequences by size
   skipredundant    Remove redundant sequences from an input set
   skipseq          Reads and writes (returns) sequences, skipping first few
   splitsource      Split sequence(s) into original source sequences
   splitter         Split sequence(s) into smaller sequences
   trimest          Remove poly-A tails from nucleotide sequences
   trimseq          Remove unwanted characters from start and end of sequence(s)
   trimspace        Remove extra whitespace from an ASCII text file
   union            Concatenate multiple sequences into a single sequence
   yank             Add a sequence reference (a full USA) to a list file

Author(s)
