
                              EMBOSS: showseq
     _________________________________________________________________
   
                                Program showseq
                                       
Function

   Display a sequence with features, translation etc
   
Description

Usage

   Here is a sample session with showseq. By default the output appears
   on standard output (the terminal) but can be saved to a file.

% showseq
Display a sequence with features, translation etc..
Input sequence(s): embl:paamir
Output file [stdout]:
PAAMIR
Pseudomonas aeruginosa amiC and amiR gene for aliphatic amidase
regulation

                   10        20        30        40        50        60
          ----:----|----:----|----:----|----:----|----:----|----:----|
          ggtaccgctggccgagcatctgctcgatcaccaccagccgggcgacgggaactgcacgat

                   70        80        90        100       110       120
          ----:----|----:----|----:----|----:----|----:----|----:----|
          ctacctggcgagcctggagcacgagcgggttcgcttcgtacggcgctgagcgacagtcac

                   130       140       150       160       170       180
          ----:----|----:----|----:----|----:----|----:----|----:----|
          aggagaggaaacggatgggatcgcaccaggagcggccgctgatcggcctgctgttctccg

.........

Command line arguments

   Mandatory qualifiers (* if not always prompted):
  [-sequence]          seqall     Sequence database USA
  [-outfile]           outfile    If you enter the name of a file here then
                                  this program will write the sequence details
                                  into that file.
   -format             list       Display format
*  -things             list       Specify a list of one or more code
                                  characters in the order in which you wish
                                  things to be displayed one above the other
                                  down the page. For example if you wish to
                                  see things displayed in the order: sequence,
                                  complement sequence, ticks line, frame 1
                                  translation, blank line; then you should
                                  enter 'S,C,T,1,B'.

   Optional qualifiers:
   -translate          range      Regions to translate (if translating).
                                  If this is left blank the complete sequence
                                  is translated.
                                  A set of regions is specified by a set of
                                  pairs of positions.
                                  The positions are integers.
                                  They are separated by any non-digit,
                                  non-alpha character.
                                  Examples of region specifications are:
                                  24-45, 56-78
                                  1:45, 67=99;765..888
                                  1,5,8,10,23,45,57,99
   -uppercase          range      Regions to put in uppercase.
                                  If this is left blank, then the sequence
                                  case is left alone.
                                  A set of regions is specified by a set of
                                  pairs of positions.
                                  The positions are integers.
                                  They are separated by any non-digit,
                                  non-alpha character.
                                  Examples of region specifications are:
                                  24-45, 56-78
                                  1:45, 67=99;765..888
                                  1,5,8,10,23,45,57,99
   -highlight          range      Regions to colour if formatting for HTML.
                                  If this is left blank, then the sequence is
                                  left alone.
                                  A set of regions is specified by a set of
                                  pairs of positions.
                                  The positions are integers.
                                  They are followed by any valid HTML font
                                  colour.
                                  Examples of region specifications are:
                                  24-45 blue 56-78 orange
                                  1-100 green 120-156 red
                                  A file of ranges to colour (one range per
                                  line) can be specified as '@filename'.
   -enzymes            string     The name 'all' reads in all enzyme names
                                  from the REBASE database. You can specify
                                  enzymes by giving their names with commas
                                  between then, such as:
                                  'HincII,hinfI,ppiI,hindiii'.
                                  The case of the names is not important. You
                                  can specify a file of enzyme names to read
                                  in by giving the name of the file holding
                                  the enzyme names with a '@' character in
                                  front of it, for example, '@enz.list'.
                                  Blank lines and lines starting with a hash
                                  character or '!' are ignored and all other
                                  lines are concatenated together with a comma
                                  character ',' and then treated as the list
                                  of enzymes to search for.
                                  An example of a file of enzyme names is:
                                  ! my enzymes
                                  HincII, ppiII
                                  ! other enzymes
                                  hindiii
                                  HinfI
                                  PpiI

   Advanced qualifiers:
   -orfminsize         integer    Minimum size of Open Reading Frames (ORFs)
                                  to display in the translations.
   -flatreformat       bool       Display RE sites in flat format
   -mincuts            integer    Minimum cuts per RE
   -maxcuts            integer    Maximum cuts per RE
   -sitelen            integer    Minimum recognition site length
   -single             bool       Force single RE site only cuts
   -[no]blunt          bool       Allow blunt end RE cutters
   -[no]sticky         bool       Allow sticky end RE cutters
   -[no]ambiguity      bool       Allow ambiguous RE matches
   -plasmid            bool       Allow circular DNA
   -[no]commercial     bool       Only use restriction enzymes with suppliers
   -[no]limit          bool       Limits RE hits to one isoschizomer
   -preferred          bool       Report preferred isoschizomers
   -table              list       Translation table genetic code to use
   -threeletter        bool       Display protein sequences in three-letter
                                  code
   -number             bool       Number the sequences
   -width              integer    Width of sequence to display
   -length             integer    Line length of page (0 for indefinite)
   -margin             integer    Margin around sequence for numbering
   -[no]name           bool       Set this to be false if you do not wish to
                                  display the ID name of the sequence
   -[no]description    bool       Set this to be false if you do not wish to
                                  display the description of the sequence
   -offset             integer    Offset to start numbering the sequence from
   -html               bool       Use HTML formatting


   Mandatory qualifiers Allowed values Default
   [-sequence]
   (Parameter 1) Sequence database USA Readable sequence(s) Required
   [-outfile]
   (Parameter 2) If you enter the name of a file here then this program
   will write the sequence details into that file. Output file stdout
   -format Display format
   0 (Enter your own list of things to display)
   1 (Sequence only)
   2 (Default sequence)
   3 (One frame translation)
   4 (Three frame translations)
   5 (Six frame translations)
   6 (Restriction enzyme map)
   7 (Baroque)
   2
   -things Specify a list of one or more code characters in the order in
   which you wish things to be displayed one above the other down the
   page. For example if you wish to see things displayed in the order:
   sequence, complement sequence, ticks line, frame 1 translation, blank
   line; then you should enter 'S,C,T,1,B'.
   S (Sequence)
   B (Blank line)
   1 (Frame1 translation)
   2 (Frame2 translation)
   3 (Frame3 translation)
   -1 (CompFrame1 translation)
   -2 (CompFrame2 translation)
   -3 (CompFrame3 translation)
   T (Ticks line)
   N (Number ticks line)
   C (Complement sequence)
   F (Features)
   R (Restriction enzyme cut sites in forward sense)
   -R (Restriction enzyme cut sites in reverse sense)
   B N T S F
   Optional qualifiers Allowed values Default
   -translate Regions to translate (if translating). If this is left
   blank the complete sequence is translated. A set of regions is
   specified by a set of pairs of positions. The positions are integers.
   They are separated by any non-digit, non-alpha character. Examples of
   region specifications are: 24-45, 56-78 1:45, 67=99;765..888
   1,5,8,10,23,45,57,99 Sequence range If this is left blank the complete
   sequence is translated.
   -uppercase Regions to put in uppercase. If this is left blank, then
   the sequence case is left alone. A set of regions is specified by a
   set of pairs of positions. The positions are integers. They are
   separated by any non-digit, non-alpha character. Examples of region
   specifications are: 24-45, 56-78 1:45, 67=99;765..888
   1,5,8,10,23,45,57,99 Sequence range If this is left blank, then the
   sequence case is left alone.
   -highlight Regions to colour if formatting for HTML. If this is left
   blank, then the sequence is left alone. A set of regions is specified
   by a set of pairs of positions. The positions are integers. They are
   followed by any valid HTML font colour. Examples of region
   specifications are: 24-45 blue 56-78 orange 1-100 green 120-156 red A
   file of ranges to colour (one range per line) can be specified as
   '@filename'. Sequence range full sequence
   -enzymes The name 'all' reads in all enzyme names from the REBASE
   database. You can specify enzymes by giving their names with commas
   between then, such as: 'HincII,hinfI,ppiI,hindiii'. The case of the
   names is not important. You can specify a file of enzyme names to read
   in by giving the name of the file holding the enzyme names with a '@'
   character in front of it, for example, '@enz.list'. Blank lines and
   lines starting with a hash character or '!' are ignored and all other
   lines are concatenated together with a comma character ',' and then
   treated as the list of enzymes to search for. An example of a file of
   enzyme names is: ! my enzymes HincII, ppiII ! other enzymes hindiii
   HinfI PpiI Any string is accepted all
   Advanced qualifiers Allowed values Default
   -orfminsize Minimum size of Open Reading Frames (ORFs) to display in
   the translations. Integer 0 or more 0
   -flatreformat Display RE sites in flat format Yes/No No
   -mincuts Minimum cuts per RE Integer from 1 to 1000 1
   -maxcuts Maximum cuts per RE Integer up to 2000000000 2000000000
   -sitelen Minimum recognition site length Integer from 2 to 20 4
   -single Force single RE site only cuts Yes/No No
   -[no]blunt Allow blunt end RE cutters Yes/No Yes
   -[no]sticky Allow sticky end RE cutters Yes/No Yes
   -[no]ambiguity Allow ambiguous RE matches Yes/No Yes
   -plasmid Allow circular DNA Yes/No No
   -[no]commercial Only use restriction enzymes with suppliers Yes/No Yes
   -[no]limit Limits RE hits to one isoschizomer Yes/No Yes
   -preferred Report preferred isoschizomers Yes/No No
   -table Translation table genetic code to use
   0 (Standard)
   1 (Standard (with alternative initiation codons))
   2 (Vertebrate Mitochondrial)
   3 (Yeast Mitochondrial)
   4 (Mold, Protozoan, Coelenterate Mitochondrial and
   Mycoplasma/Spiroplasma)
   5 (Invertebrate Mitochondrial)
   6 (Ciliate Macronuclear and Dasycladacean)
   9 (Echinoderm Mitochondrial)
   10 (Euplotid Nuclear)
   11 (Bacterial)
   12 (Alternative Yeast Nuclear)
   13 (Ascidian Mitochondrial)
   14 (Flatworm Mitochondrial)
   15 (Blepharisma Macronuclear)
   0
   -threeletter Display protein sequences in three-letter code Yes/No No
   -number Number the sequences Yes/No No
   -width Width of sequence to display Integer 1 or more 60
   -length Line length of page (0 for indefinite) Integer 0 or more 0
   -margin Margin around sequence for numbering Integer 0 or more 10
   -[no]name Set this to be false if you do not wish to display the ID
   name of the sequence Yes/No Yes
   -[no]description Set this to be false if you do not wish to display
   the description of the sequence Yes/No Yes
   -offset Offset to start numbering the sequence from Any integer value
   1
   -html Use HTML formatting Yes/No No
   
Input file format

Output file format

   The output from showseq is a numbered pretty report of the sequence.
   There are many options to select and highlight parts of the sequence.
   
   Part of the output from the example run is shown below.

PAAMIR
Pseudomonas aeruginosa amiC and amiR gene for aliphatic amidase
regulation

                   10        20        30        40        50        60
          ----:----|----:----|----:----|----:----|----:----|----:----|
          ggtaccgctggccgagcatctgctcgatcaccaccagccgggcgacgggaactgcacgat

                   70        80        90        100       110       120
          ----:----|----:----|----:----|----:----|----:----|----:----|
          ctacctggcgagcctggagcacgagcgggttcgcttcgtacggcgctgagcgacagtcac

                   130       140       150       160       170       180
          ----:----|----:----|----:----|----:----|----:----|----:----|
          aggagaggaaacggatgggatcgcaccaggagcggccgctgatcggcctgctgttctccg


Data files

Notes

References

Warnings

Diagnostic Error Messages

Exit status

Known bugs

See also

   Program name Description
   antigenic Finds antigenic sites in proteins
   backtranseq Back translate a protein sequence
   chaos Create a chaos game representation plot for a sequence
   cpgplot Plot CpG rich areas
   cpgreport Reports all CpG rich regions
   cusp Create a codon usage table
   dotmatcher Displays a thresholded dotplot of two sequences
   dottup Displays a wordmatch dotplot of two sequences
   einverted Finds DNA inverted repeats
   equicktandem Finds tandem repeats
   etandem Looks for tandem repeats in a nucleotide sequence
   garnier Predicts protein secondary structure
   getorf Finds and extracts open reading frames (ORFs)
   helixturnhelix Report nucleic acid binding motifs
   isochore Plots isochores in large DNA sequences
   newcpgreport Report CpG rich areas
   newcpgseek Reports CpG rich regions
   oddcomp Finds protein sequence regions with a biased composition
   palindrome Looks for inverted repeats in a nucleotide sequence
   pepcoil Predicts coiled coil regions
   plotorf Plot potential open reading frames
   polydot Displays all-against-all dotplots of a set of sequences
   prettyseq Output sequence with translated ranges
   pscan Scans proteins using PRINTS
   rebaseextract Extract data from REBASE
   redata Search REBASE for enzyme name, references, suppliers etc
   remap Display a sequence with restriction cut sites, translation etc
   restrict Finds restriction enzyme cleavage sites
   seqret Reads and writes (returns) sequences
   seqretall Reads and writes (returns) a set of sequences one at a time
   seqretset Reads and writes (returns) a set of sequences all at once
   showfeat Show features of a sequence
   showorf Pretty output of DNA translations
   sigcleave Reports protein signal cleavage sites
   tfscan Scans DNA sequences for transcription factors
   tmap Displays membrane spanning regions
   transeq Translate nucleic acid sequences
   
Author(s)

   This application was written by Gary Williams
   (gwilliam@hgmp.mrc.ac.uk)
   
History

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.
   
Comments
