                                    yank



Wiki

   The master copies of EMBOSS documentation are available at
   http://emboss.open-bio.org/wiki/Appdocs on the EMBOSS Wiki.

   Please help by correcting and extending the Wiki pages.

Function

   Add a sequence reference (a full USA) to a list file

Description

   yank adds the full Uniform Sequence Address (USA) of a specified
   sequence, or a region (subsequence) of a sequence, to a list file. The
   file is appended to by default but (optionally) is overwritten.A list
   file contains one or more sequence references (USAs). For example, a
   database entry, the name of a file containing sequences, or even the
   names of another list file. In addition to the name of the sequence, it
   can write the start and end position of a region within that sequence
   and, if the sequence is nucleic, if can specify whether the sequence is
   the reverse complement.

Usage

   Here is a sample session with yank

   This is an example of adding an entry for the part of tembl:x65921
   between positions 1913 and 1915 to the existing list file 'cds.list':


% yank
Add a sequence reference (a full USA) to a list file
Input (gapped) sequence: tembl:x65921
     Begin at position [start]: 1913
       End at position [end]: 1915
        Reverse strand [N]:
List of USAs output file [x65921.yank]: cds.list


   Go to the input files for this example
   Go to the output files for this example

Command line arguments

Add a sequence reference (a full USA) to a list file
Version: EMBOSS:6.2.0

   Standard (Mandatory) qualifiers:
  [-sequence]          sequence   (Gapped) sequence filename and optional
                                  format, or reference (input USA)
  [-outfile]           outfile    [*.yank] List of USAs output file

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -newfile            boolean    [N] Overwrite existing output file

   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of the sequence to be used
   -send1              integer    End of the sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outfile" associated qualifiers
   -odirectory2        string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages
   -version            boolean    Report version number and exit


Input file format

   yank reads any valid sequence USA.

   You will be prompted for the start and end positions you wish to use.

   If the sequence is nucleic, you will be prompted whether you wish to
   use the reverse complement of the sequence.

  Input files for usage example

   'tembl:x65921' is a sequence entry in the example nucleic acid database
   'tembl'

  Database entry: tembl:x65921

ID   X65921; SV 1; linear; genomic DNA; STD; HUM; 2016 BP.
XX
AC   X65921; S45242;
XX
DT   13-MAY-1992 (Rel. 31, Created)
DT   14-NOV-2006 (Rel. 89, Last updated, Version 7)
XX
DE   H.sapiens fau 1 gene
XX
KW   fau 1 gene.
XX
OS   Homo sapiens (human)
OC   Eukaryota; Metazoa; Chordata; Craniata; Vertebrata; Euteleostomi; Mammalia;
OC   Eutheria; Euarchontoglires; Primates; Haplorrhini; Catarrhini; Hominidae;
OC   Homo.
XX
RN   [1]
RP   1-2016
RA   Kas K.;
RT   ;
RL   Submitted (29-APR-1992) to the EMBL/GenBank/DDBJ databases.
RL   K. Kas, University of Antwerp, Dept of Biochemistry T3.22,
RL   Universiteitsplein 1, 2610 Wilrijk, BELGIUM
XX
RN   [2]
RP   1-2016
RX   DOI; 10.1016/0006-291X(92)91286-Y.
RX   PUBMED; 1326960.
RA   Kas K., Michiels L., Merregaert J.;
RT   "Genomic structure and expression of the human fau gene: encoding the
RT   ribosomal protein S30 fused to a ubiquitin-like protein";
RL   Biochem. Biophys. Res. Commun. 187(2):927-933(1992).
XX
DR   GDB; 191789.
DR   GDB; 191790.
DR   GDB; 354872.
DR   GDB; 4590236.
XX
FH   Key             Location/Qualifiers
FH
FT   source          1..2016
FT                   /organism="Homo sapiens"
FT                   /mol_type="genomic DNA"
FT                   /clone_lib="CML cosmid"
FT                   /clone="15.1"
FT                   /db_xref="taxon:9606"
FT   mRNA            join(408..504,774..856,951..1095,1557..1612,1787..>1912)
FT                   /gene="fau 1"
FT   exon            408..504
FT                   /number=1


  [Part of this file has been deleted for brevity]

FT                   RAKRRMQYNRRFVNVVPTFGKKKGPNANS"
FT   intron          857..950
FT                   /number=2
FT   exon            951..1095
FT                   /number=3
FT   intron          1096..1556
FT                   /number=3
FT   exon            1557..1612
FT                   /number=4
FT   intron          1613..1786
FT                   /number=4
FT   exon            1787..>1912
FT                   /number=5
FT   polyA_signal    1938..1943
XX
SQ   Sequence 2016 BP; 421 A; 562 C; 538 G; 495 T; 0 other;
     ctaccatttt ccctctcgat tctatatgta cactcgggac aagttctcct gatcgaaaac        60
     ggcaaaacta aggccccaag taggaatgcc ttagttttcg gggttaacaa tgattaacac       120
     tgagcctcac acccacgcga tgccctcagc tcctcgctca gcgctctcac caacagccgt       180
     agcccgcagc cccgctggac accggttctc catccccgca gcgtagcccg gaacatggta       240
     gctgccatct ttacctgcta cgccagcctt ctgtgcgcgc aactgtctgg tcccgccccg       300
     tcctgcgcga gctgctgccc aggcaggttc gccggtgcga gcgtaaaggg gcggagctag       360
     gactgccttg ggcggtacaa atagcaggga accgcgcggt cgctcagcag tgacgtgaca       420
     cgcagcccac ggtctgtact gacgcgccct cgcttcttcc tctttctcga ctccatcttc       480
     gcggtagctg ggaccgccgt tcaggtaaga atggggcctt ggctggatcc gaagggcttg       540
     tagcaggttg gctgcggggt cagaaggcgc ggggggaacc gaagaacggg gcctgctccg       600
     tggccctgct ccagtcccta tccgaactcc ttgggaggca ctggccttcc gcacgtgagc       660
     cgccgcgacc accatcccgt cgcgatcgtt tctggaccgc tttccactcc caaatctcct       720
     ttatcccaga gcatttcttg gcttctctta caagccgtct tttctttact cagtcgccaa       780
     tatgcagctc tttgtccgcg cccaggagct acacaccttc gaggtgaccg gccaggaaac       840
     ggtcgcccag atcaaggtaa ggctgcttgg tgcgccctgg gttccatttt cttgtgctct       900
     tcactctcgc ggcccgaggg aacgcttacg agccttatct ttccctgtag gctcatgtag       960
     cctcactgga gggcattgcc ccggaagatc aagtcgtgct cctggcaggc gcgcccctgg      1020
     aggatgaggc cactctgggc cagtgcgggg tggaggccct gactaccctg gaagtagcag      1080
     gccgcatgct tggaggtgag tgagagagga atgttctttg aagtaccggt aagcgtctag      1140
     tgagtgtggg gtgcatagtc ctgacagctg agtgtcacac ctatggtaat agagtacttc      1200
     tcactgtctt cagttcagag tgattcttcc tgtttacatc cctcatgttg aacacagacg      1260
     tccatgggag actgagccag agtgtagttg tatttcagtc acatcacgag atcctagtct      1320
     ggttatcagc ttccacacta aaaattaggt cagaccaggc cccaaagtgc tctataaatt      1380
     agaagctgga agatcctgaa atgaaactta agatttcaag gtcaaatatc tgcaactttg      1440
     ttctcattac ctattgggcg cagcttctct ttaaaggctt gaattgagaa aagaggggtt      1500
     ctgctgggtg gcaccttctt gctcttacct gctggtgcct tcctttccca ctacaggtaa      1560
     agtccatggt tccctggccc gtgctggaaa agtgagaggt cagactccta aggtgagtga      1620
     gagtattagt ggtcatggtg ttaggacttt ttttcctttc acagctaaac caagtccctg      1680
     ggctcttact cggtttgcct tctccctccc tggagatgag cctgagggaa gggatgctag      1740
     gtgtggaaga caggaaccag ggcctgatta accttccctt ctccaggtgg ccaaacagga      1800
     gaagaagaag aagaagacag gtcgggctaa gcggcggatg cagtacaacc ggcgctttgt      1860
     caacgttgtg cccacctttg gcaagaagaa gggccccaat gccaactctt aagtcttttg      1920
     taattctggc tttctctaat aaaaaagcca cttagttcag tcatcgcatt gtttcatctt      1980
     tacttgcaag gcctcaggga gaggtgtgct tctcgg                                2016
//

Output file format

  Output files for usage example

  File: cds.list

tembl-id:X65921[782:856]
tembl-id:X65921[951:1095]
tembl-id:X65921[1557:1612]
tembl-id:X65921[1787:1912]
tembl-id:X65921[1913:1915]

   The output list file can now be read in by a program such as union by
   specifying the list file as '@cds.list' when union prompts for input.

Data files

   None.

Notes

   There are many ways of specifying input and output sequences for EMBOSS
   programs, including wildcarded sequence file names, wildcarded database
   entry names and list files. List files (files of file names) are the
   most flexible. Instead of containing the sequences themselves, a list
   file contains one or more sequence references (USAs). For example, a
   database entry, the name of a file containing sequences, or even the
   names of another list file. For example, here's a valid list file:
opsd_abyko.fasta
sw:opsd_xenla
sw:opsd_c*
@another_list

   The file contains:
    * opsd_abyko.fasta - this is the name of a sequence file. The file is read i
n from the current directory.
    * sw:opsd_xenla - this is a reference to a specific sequence in the SwissPro
t database
    * sw:opsd_c* - this represents all the sequences in SwissProt whose identifi
ers start with ``opsd_c''
    * another_list - this is the name of a second list file

   Notice the @ in front of the last entry. This is the way you tell
   EMBOSS that this file is a list file, not a regular sequence file.

   Without the program yank you would need to use a text editor such as
   pico to create the appropriate list files. yank makes this process
   easy.

References

   None.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with status 0.

Known bugs

   None.

See also

   Program name     Description
   aligncopy        Reads and writes alignments
   aligncopypair    Reads and writes pairs from alignments
   biosed           Replace or delete sequence sections
   codcopy          Copy and reformat a codon usage table
   cutseq           Removes a section from a sequence
   degapseq         Removes non-alphabetic (e.g. gap) characters from sequences
   descseq          Alter the name or description of a sequence
   entret           Retrieves sequence entries from flatfile databases and files
   extractalign     Extract regions from a sequence alignment
   extractfeat      Extract features from sequence(s)
   extractseq       Extract regions from a sequence
   featcopy         Reads and writes a feature table
   featreport       Reads and writes a feature table
   listor           Write a list file of the logical OR of two sets of sequences
   makenucseq       Create random nucleotide sequences
   makeprotseq      Create random protein sequences
   maskambignuc     Masks all ambiguity characters in nucleotide sequences
   with             N
   maskambigprot    Masks all ambiguity characters in protein sequences with
                    X
   maskfeat         Write a sequence with masked features
   maskseq          Write a sequence with masked regions
   newseq           Create a sequence file from a typed-in sequence
   nohtml           Remove mark-up (e.g. HTML tags) from an ASCII text file
   noreturn         Remove carriage return from ASCII files
   nospace          Remove all whitespace from an ASCII text file
   notab            Replace tabs with spaces in an ASCII text file
   notseq           Write to file a subset of an input stream of sequences
   nthseq           Write to file a single sequence from an input stream of
                    sequences
   nthseqset        Reads and writes (returns) one set of sequences from many
   pasteseq         Insert one sequence into another
   revseq           Reverse and complement a nucleotide sequence
   seqret           Reads and writes (returns) sequences
   seqretsetall     Reads and writes (returns) many sets of sequences
   seqretsplit      Reads sequences and writes them to individual files
   sizeseq          Sort sequences by size
   skipredundant    Remove redundant sequences from an input set
   skipseq          Reads and writes (returns) sequences, skipping first few
   splitsource      Split sequence(s) into original source sequences
   splitter         Split sequence(s) into smaller sequences
   trimest          Remove poly-A tails from nucleotide sequences
   trimseq          Remove unwanted characters from start and end of sequence(s)
   trimspace        Remove extra whitespace from an ASCII text file
   union            Concatenate multiple sequences into a single sequence
   vectorstrip      Removes vectors from the ends of nucleotide sequence(s)

   The program extract does not make list files, but creates a sequence
   from sub-regions of a single other sequence.

Author(s)

   Peter Rice (pmr (c) ebi.ac.uk)
   European Bioinformatics Institute, Wellcome Trust Genome Campus,
   Hinxton, Cambridge CB10 1SD, UK

History

   Written (March 2002) - Peter Rice.

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments

   None
