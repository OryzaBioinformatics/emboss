
                                 splitter 



Function

   Split sequence(s) into smaller sequences

Description

   splitter splits one or more input sequences into smaller, optionally
   overlapping, subsequences. The subsequence size and overlap (if any)
   may be specified. Optionally, feature information will be used.

Usage

   Here is a sample session with splitter

   Split a sequence into sub-sequences of 10,000 bases (the default size)
   with no overlap between the sub-sequences:


% splitter tembl:BA000025 ba000025.split 
Split sequence(s) into smaller sequences

   Go to the input files for this example
   Go to the output files for this example

   Example 2

   Split a sequence into sub-sequences of 50,000 bases with an overlap of
   3,000 bases on each sub-sequence:


% splitter tembl:BA000025 ba000025.split -size=50000 -over=3000 
Split sequence(s) into smaller sequences

   Go to the output files for this example

Command line arguments

   Standard (Mandatory) qualifiers:
  [-sequence]          seqall     Sequence(s) filename and optional format, or
                                  reference (input USA)
  [-outseq]            seqoutall  [.] Sequence set(s)
                                  filename and optional format (output USA)

   Additional (Optional) qualifiers:
   -size               integer    [10000] Size to split at (Integer 1 or more)
   -overlap            integer    [0] Overlap between split sequences (Integer
                                  0 or more)
   -source             boolean    [N] Split using source features with /origid
                                  qualifiers
   -multifile          boolean    [N] Split sequence into multiple files

   Advanced (Unprompted) qualifiers:
   -feature            boolean    [N] Use feature information
   -addoverlap         boolean    [N] Add overlap to size

   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of each sequence to be used
   -send1              integer    End of each sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outseq" associated qualifiers
   -osformat2          string     Output seq format
   -osextension2       string     File name extension
   -osname2            string     Base file name
   -osdirectory2       string     Output directory
   -osdbname2          string     Database name to add
   -ossingle2          boolean    Separate file for each entry
   -oufo2              string     UFO features
   -offormat2          string     Features format
   -ofname2            string     Features file name
   -ofdirectory2       string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages

Data files

   None.

Notes

   Splitting a large sequence into smaller sub-sequences for analysis
   might be useful in cases where a particularly memory or CPU intensive
   application will not run quickly enough or at all on the full
   sequence. This should seldom be necessary in EMBOSS.

   By default, splitter will write all the sub-sequences to a single
   file. In some cases, particularly where non-EMBOSS programs are used,
   it is necessary to have a single sequence per file. To write the
   sub-sequences into separate files use the command-line switch
   -ossingle.

References

   None

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with status 0

Known bugs

   None.

See also

   Program name Description
   aligncopy Reads and writes alignments
   aligncopypair Reads and writes pairs from alignments
   biosed Replace or delete sequence sections
   codcopy Copy and reformat a codon usage table
   cutseq Removes a section from a sequence
   degapseq Removes non-alphabetic (e.g. gap) characters from sequences
   descseq Alter the name or description of a sequence
   entret Retrieves sequence entries from flatfile databases and files
   extractalign Extract regions from a sequence alignment
   extractfeat Extract features from sequence(s)
   extractseq Extract regions from a sequence
   featcopy Reads and writes a feature table
   featreport Reads and writes a feature table
   listor Write a list file of the logical OR of two sets of sequences
   makenucseq Create random nucleotide sequences
   makeprotseq Create random protein sequences
   maskambignuc Masks all ambiguity characters in nucleotide sequences
   with N
   maskambigprot Masks all ambiguity characters in protein sequences with
   X
   maskfeat Write a sequence with masked features
   maskseq Write a sequence with masked regions
   newseq Create a sequence file from a typed-in sequence
   nohtml Remove mark-up (e.g. HTML tags) from an ASCII text file
   noreturn Remove carriage return from ASCII files
   nospace Remove all whitespace from an ASCII text file
   notab Replace tabs with spaces in an ASCII text file
   notseq Write to file a subset of an input stream of sequences
   nthseq Write to file a single sequence from an input stream of
   sequences
   pasteseq Insert one sequence into another
   revseq Reverse and complement a nucleotide sequence
   seqret Reads and writes (returns) sequences
   seqretsplit Reads sequences and writes them to individual files
   sizeseq Sort sequences by size
   skipredundant Remove redundant sequences from an input set
   skipseq Reads and writes (returns) sequences, skipping first few
   trimest Remove poly-A tails from nucleotide sequences
   trimseq Remove unwanted characters from start and end of sequence(s)
   trimspace Remove extra whitespace from an ASCII text file
   union Concatenate multiple sequences into a single sequence
   vectorstrip Removes vectors from the ends of nucleotide sequence(s)
   yank Add a sequence reference (a full USA) to a list file

Author(s)

   Gary Williams (gwilliam © rfcgr.mrc.ac.uk)
   MRC Rosalind Franklin Centre for Genomics Research Wellcome Trust
   Genome Campus, Hinxton, Cambridge, CB10 1SB, UK

History

   Completed 22 March 1999

Target users This program is intended to be used by everyone and everything,
from naive users to embedded scripts.

Comments

   None
