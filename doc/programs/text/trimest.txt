                                   trimest



Wiki

   The master copies of EMBOSS documentation are available at
   http://emboss.open-bio.org/wiki/Appdocs on the EMBOSS Wiki.

   Please help by correcting and extending the Wiki pages.

Function

   Remove poly-A tails from nucleotide sequences

Description

   trimest reads one or more nucleotide sequences and writes them out
   again but with any 3' poly-A tail (or, optionally, 5' poly-T tail)
   removed. It detect any poly-A and poly-T tails in the input sequences
   that are at least the specified minimum length. The tails may continue
   a defined num of non-A or non-T bases. If both a 5' poly-T tail and a
   3' poly-A tail is identified, it removes the longest of the two. The
   output is a set of sequences with the poly-A (or poly-T) tails removed.
   If a sequence had a 5' poly-T tail then the resulting sequence is
   reverse-complemented by default. The description line has a comment
   appended about the changes made to the sequence.

Algorithm

   trimest looks for a repeat of at least -minlength A's at the 3' end
   (and, by default, -minlength T's at the 5' end). If there are an
   apparent 5' poly-T tail and a poly-A tail, then it removes whichever is
   the longer of the two.

   By default, it will allow -mismatches non-A (or non-T) bases in the
   tail. If a mismatch is found, then there has to be at least -minlength
   A's (or T's) past the mismatch (working from the end) for the mismatch
   to be considered part of the tail. If -mismatches is greater than 1
   then that number of contiguous non-A (or non-T) bases will be allowed
   as part of the tail.

Usage

   Here is a sample session with trimest


% trimest tembl:x65923 x65923.seq
Remove poly-A tails from nucleotide sequences


   Go to the input files for this example
   Go to the output files for this example

Command line arguments

Remove poly-A tails from nucleotide sequences
Version: EMBOSS:6.2.0

   Standard (Mandatory) qualifiers:
  [-sequence]          seqall     Nucleotide sequence(s) filename and optional
                                  format, or reference (input USA)
  [-outseq]            seqoutall  [.] Sequence set(s)
                                  filename and optional format (output USA)

   Additional (Optional) qualifiers:
   -minlength          integer    [4] This is the minimum length that a poly-A
                                  (or poly-T) tail must have before it is
                                  removed. If there are mismatches in the tail
                                  than there must be at least this length of
                                  poly-A tail before the mismatch for the
                                  mismatch to be considered part of the tail.
                                  (Integer 1 or more)
   -mismatches         integer    [1] If there are this number or fewer
                                  contiguous non-A bases in a poly-A tail
                                  then, if there are '-minlength' 'A' bases
                                  before them, they will be considered part of
                                  the tail and removed .
                                  For example the terminal 4 A's of GCAGAAAA
                                  would be removed with the default values of
                                  -minlength=4 and -mismatches=1 (There are
                                  not at least 4 A's before the last 'G' and
                                  so only the A's after it are considered to
                                  be part of the tail). The terminal 9 bases
                                  of GCAAAAGAAAA would be removed; There are
                                  at least -minlength A's preceeding the last
                                  'G', so it is part of the tail. (Integer 0
                                  or more)
   -[no]reverse        boolean    [Y] When a poly-T region at the 5' end of
                                  the sequence is found and removed, it is
                                  likely that the sequence is in the reverse
                                  sense. This option will change the sequence
                                  to the forward sense when it is written out.
                                  If this option is not set, then the sense
                                  will not be changed.
   -tolower            toggle     [N] The poly-A region can be 'masked' by
                                  converting the sequence characters to
                                  lower-case. Some non-EMBOSS programs e.g.
                                  fasta can interpret this as a masked region.
                                  The sequence is unchanged apart from the
                                  case change. You might like to ensure that
                                  the whole sequence is in upper-case before
                                  masking the specified regions to lower-case
                                  by using the '-supper' sequence qualifier.

   Advanced (Unprompted) qualifiers:
   -[no]fiveprime      boolean    [Y] If this is set true, then the 5' end of
                                  teh sequence is inspected for poly-T tails.
                                  These will be removed if they are longer
                                  than any 3' poly-A tails. If this is false,
                                  then the 5' end is ignored.

   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of each sequence to be used
   -send1              integer    End of each sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outseq" associated qualifiers
   -osformat2          string     Output seq format
   -osextension2       string     File name extension
   -osname2            string     Base file name
   -osdirectory2       string     Output directory
   -osdbname2          string     Database name to add
   -ossingle2          boolean    Separate file for each entry
   -oufo2              string     UFO features
   -offormat2          string     Features format
   -ofname2            string     Features file name
   -ofdirectory2       string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages
   -version            boolean    Report version number and exit


Input file format

   trimest reads the USA of one or more normal nucleic acid sequences.

  Input files for usage example

   'tembl:x65923' is a sequence entry in the example nucleic acid database
   'tembl'

  Database entry: tembl:x65923

ID   X65923; SV 1; linear; mRNA; STD; HUM; 518 BP.
XX
AC   X65923;
XX
DT   13-MAY-1992 (Rel. 31, Created)
DT   18-APR-2005 (Rel. 83, Last updated, Version 11)
XX
DE   H.sapiens fau mRNA
XX
KW   fau gene.
XX
OS   Homo sapiens (human)
OC   Eukaryota; Metazoa; Chordata; Craniata; Vertebrata; Euteleostomi; Mammalia;
OC   Eutheria; Euarchontoglires; Primates; Haplorrhini; Catarrhini; Hominidae;
OC   Homo.
XX
RN   [1]
RP   1-518
RA   Michiels L.M.R.;
RT   ;
RL   Submitted (29-APR-1992) to the EMBL/GenBank/DDBJ databases.
RL   L.M.R. Michiels, University of Antwerp, Dept of Biochemistry,
RL   Universiteisplein 1, 2610 Wilrijk, BELGIUM
XX
RN   [2]
RP   1-518
RX   PUBMED; 8395683.
RA   Michiels L., Van der Rauwelaert E., Van Hasselt F., Kas K., Merregaert J.;
RT   "fau cDNA encodes a ubiquitin-like-S30 fusion protein and is expressed as
RT   an antisense sequence in the Finkel-Biskis-Reilly murine sarcoma virus";
RL   Oncogene 8(9):2537-2546(1993).
XX
DR   H-InvDB; HIT000322806.
XX
FH   Key             Location/Qualifiers
FH
FT   source          1..518
FT                   /organism="Homo sapiens"
FT                   /chromosome="11q"
FT                   /map="13"
FT                   /mol_type="mRNA"
FT                   /clone_lib="cDNA"
FT                   /clone="pUIA 631"
FT                   /tissue_type="placenta"
FT                   /db_xref="taxon:9606"
FT   misc_feature    57..278
FT                   /note="ubiquitin like part"
FT   CDS             57..458
FT                   /gene="fau"
FT                   /db_xref="GDB:135476"
FT                   /db_xref="GOA:P62861"
FT                   /db_xref="HGNC:3597"
FT                   /db_xref="HSSP:1GJZ"
FT                   /db_xref="InterPro:IPR006846"
FT                   /db_xref="UniProtKB/Swiss-Prot:P35544"
FT                   /protein_id="CAA46716.1"
FT                   /translation="MQLFVRAQELHTFEVTGQETVAQIKAHVASLEGIAPEDQVVLLAG
FT                   APLEDEATLGQCGVEALTTLEVAGRMLGGKVHGSLARAGKVRGQTPKVAKQEKKKKKTG
FT                   RAKRRMQYNRRFVNVVPTFGKKKGPNANS"
FT   misc_feature    98..102
FT                   /note="nucleolar localization signal"
FT   misc_feature    279..458
FT                   /note="S30 part"
FT   polyA_signal    484..489
FT   polyA_site      509
XX
SQ   Sequence 518 BP; 125 A; 139 C; 148 G; 106 T; 0 other;
     ttcctctttc tcgactccat cttcgcggta gctgggaccg ccgttcagtc gccaatatgc        60
     agctctttgt ccgcgcccag gagctacaca ccttcgaggt gaccggccag gaaacggtcg       120
     cccagatcaa ggctcatgta gcctcactgg agggcattgc cccggaagat caagtcgtgc       180
     tcctggcagg cgcgcccctg gaggatgagg ccactctggg ccagtgcggg gtggaggccc       240
     tgactaccct ggaagtagca ggccgcatgc ttggaggtaa agttcatggt tccctggccc       300
     gtgctggaaa agtgagaggt cagactccta aggtggccaa acaggagaag aagaagaaga       360
     agacaggtcg ggctaagcgg cggatgcagt acaaccggcg ctttgtcaac gttgtgccca       420
     cctttggcaa gaagaagggc cccaatgcca actcttaagt cttttgtaat tctggctttc       480
     tctaataaaa aagccactta gttcagtcaa aaaaaaaa                               518
//

Output file format

   If a poly-A tail is reomved then [poly-A tail removed] is appended to
   the description of the sequence. If poly-T is removed, then [poly-T
   tail removed] is appended and if the sequence is reversed, [reverse
   complement] is appended.

  Output files for usage example

  File: x65923.seq

>X65923 X65923.1 H.sapiens fau mRNA [poly-A tail removed]
ttcctctttctcgactccatcttcgcggtagctgggaccgccgttcagtcgccaatatgc
agctctttgtccgcgcccaggagctacacaccttcgaggtgaccggccaggaaacggtcg
cccagatcaaggctcatgtagcctcactggagggcattgccccggaagatcaagtcgtgc
tcctggcaggcgcgcccctggaggatgaggccactctgggccagtgcggggtggaggccc
tgactaccctggaagtagcaggccgcatgcttggaggtaaagttcatggttccctggccc
gtgctggaaaagtgagaggtcagactcctaaggtggccaaacaggagaagaagaagaaga
agacaggtcgggctaagcggcggatgcagtacaaccggcgctttgtcaacgttgtgccca
cctttggcaagaagaagggccccaatgccaactcttaagtcttttgtaattctggctttc
tctaataaaaaagccacttagttcagtc

   The output is a set of sequences with the poly-A (or poly-T) tails
   removed. If a sequence had a 5' poly-T tail then the resulting sequence
   is reverse-complemented by default. The description line has a comment
   appended about the changes made to the sequence.

Data files

   None.

Notes

   EST and mRNA sequences often have poly-A tails at their 3' end. Where
   an EST sequence is the reverse complement of a corresponding mRNA's
   forward sense it may have a poly-T tail at its 5' end.

   trimest is not infallible. There are often repeats of A (or T) in a
   sequence that just happen by chance to occur at the 3' (or 5') end of
   the EST sequence. trimest has no way of determining if the A's it finds
   are part of a real poly-A tail or are a part of the transcribed genomic
   sequence. It removes any apparent poly-A tails that match its criteria
   for a poly-A tail (see "Algorithm").

References

   None.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with status 0.

Known bugs

   None.

See also

   Program name     Description
   aligncopy        Reads and writes alignments
   aligncopypair    Reads and writes pairs from alignments
   biosed           Replace or delete sequence sections
   codcopy          Copy and reformat a codon usage table
   cutseq           Removes a section from a sequence
   degapseq         Removes non-alphabetic (e.g. gap) characters from sequences
   descseq          Alter the name or description of a sequence
   entret           Retrieves sequence entries from flatfile databases and files
   extractalign     Extract regions from a sequence alignment
   extractfeat      Extract features from sequence(s)
   extractseq       Extract regions from a sequence
   featcopy         Reads and writes a feature table
   featreport       Reads and writes a feature table
   listor           Write a list file of the logical OR of two sets of sequences
   makenucseq       Create random nucleotide sequences
   makeprotseq      Create random protein sequences
   maskambignuc     Masks all ambiguity characters in nucleotide sequences
   with             N
   maskambigprot    Masks all ambiguity characters in protein sequences with
                    X
   maskfeat         Write a sequence with masked features
   maskseq          Write a sequence with masked regions
   newseq           Create a sequence file from a typed-in sequence
   nohtml           Remove mark-up (e.g. HTML tags) from an ASCII text file
   noreturn         Remove carriage return from ASCII files
   nospace          Remove all whitespace from an ASCII text file
   notab            Replace tabs with spaces in an ASCII text file
   notseq           Write to file a subset of an input stream of sequences
   nthseq           Write to file a single sequence from an input stream of
                    sequences
   nthseqset        Reads and writes (returns) one set of sequences from many
   pasteseq         Insert one sequence into another
   revseq           Reverse and complement a nucleotide sequence
   seqret           Reads and writes (returns) sequences
   seqretsetall     Reads and writes (returns) many sets of sequences
   seqretsplit      Reads sequences and writes them to individual files
   sizeseq          Sort sequences by size
   skipredundant    Remove redundant sequences from an input set
   skipseq          Reads and writes (returns) sequences, skipping first few
   splitsource      Split sequence(s) into original source sequences
   splitter         Split sequence(s) into smaller sequences
   trimseq          Remove unwanted characters from start and end of sequence(s)
   trimspace        Remove extra whitespace from an ASCII text file
   union            Concatenate multiple sequences into a single sequence
   vectorstrip      Removes vectors from the ends of nucleotide sequence(s)
   yank             Add a sequence reference (a full USA) to a list file

Author(s)

   Gary Williams (gwilliam (c) rfcgr.mrc.ac.uk)
   MRC Rosalind Franklin Centre for Genomics Research Wellcome Trust
   Genome Campus, Hinxton, Cambridge, CB10 1SB, UK

History

   Written (3 Oct 2001) - Gary Williams

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments

   None
