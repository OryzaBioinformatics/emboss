
                              EMBOSS: pepwheel
     _________________________________________________________________
   
                               Program pepwheel
                                       
Function

   Shows protein sequences as helices
   
Description

   Displays peptide sequences in a helical representation
   
   This gives a view of a helix from a protein sequence looking down the
   axis of the helix.
   
   It is useful for highlighting amphipathicity and other properties of
   residues around a helix.
   
Usage

   Here is a sample session with pepwheel.

% pepwheel sw:hbb_human -send 30
Graph type [xwin]:

   click here for result
   
Command line arguments

   Mandatory qualifiers (* if not always prompted):
  [-sequence]          sequence   Sequence USA
*  -graph              graph      Graph type
*  -outfile            outfile    Output file name

   Optional qualifiers (* if not always prompted):
   -steps              integer    The number of residues plotted per turn is
                                  this value divided by the 'turns' value.
   -turns              integer    The number of residues plotted per turn is
                                  the 'steps' value divided by this value.
*  -squares            string     By default the aliphatic residues ILVM are
                                  marked with squares.
*  -diamonds           string     By default the residues DENQST are marked
                                  with diamonds.
*  -octags             string     By default the positively charged residues
                                  HKR are marked with octagons.

   Advanced qualifiers:
   -amphipathic        bool       If this is true then the residues ACFGILMVWY
                                  are marked as squares and all other
                                  residues are unmarked. This overrides any
                                  other markup that you may have specified
                                  using the qualifiers '-squares', '-diamonds'
                                  and '-octags'.
   -[no]wheel          bool       Plot the wheel
   -data               bool       Output the match data to a file instead of
                                  plotting it
   

   Mandatory qualifiers Allowed values Default
   [-sequence]
   (Parameter 1) Sequence USA Readable sequence Required
   -graph Graph type EMBOSS has a list of known devices, including
   postscript, ps, hpgl, hp7470, hp7580, meta, colourps, cps, xwindows,
   x11, tektronics, tekt, tek4107t, tek, none, null, text, data, xterm
   EMBOSS_GRAPHICS value, or x11
   -outfile Output file name Output file <sequence>.pepwheel
   Optional qualifiers Allowed values Default
   -steps The number of residues plotted per turn is this value divided
   by the 'turns' value. Integer from 2 to 100 18
   -turns The number of residues plotted per turn is the 'steps' value
   divided by this value. Integer from 1 to 100 5
   -squares By default the aliphatic residues ILVM are marked with
   squares. Any string is accepted ILVM
   -diamonds By default the residues DENQST are marked with diamonds. Any
   string is accepted DENQST
   -octags By default the positively charged residues HKR are marked with
   octagons. Any string is accepted HKR
   Advanced qualifiers Allowed values Default
   -amphipathic If this is true then the residues ACFGILMVWY are marked
   as squares and all other residues are unmarked. This overrides any
   other markup that you may have specified using the qualifiers
   '-squares', '-diamonds' and '-octags'. Yes/No No
   -[no]wheel Plot the wheel Yes/No Yes
   -data Output the match data to a file instead of plotting it Yes/No No
   
Input file format

   Any protein sequence USA.
   
Output file format

   A .ps file if postscript output is requested.
   
Data files

Notes

   The default settings for turn (5) and steps (18) apply to alpha
   helices. For other possible secondary structures, see the following
   table:
   

helix       phi   psi  omega  res/turn  transl.  turns  steps
alpha       -57   -47    180       3.6     1.50      5     18
3-10        -49   -26    180       3.0     2.00      1      3
pi          -57   -70    180       4.4     1.15      5     22
PP I        -83   158      0       3.33    1.9       3     10
PP II       -78   149    180       3.0     3.12      1      3
PG II       -80   150    180       3.0     3.1       1      3
anti Beta  -139   135   -178       2.0     3.4       4      9
para Beta  -119   113    180       2.0     3.2       4      9

PP is polyproline
PG II is polyGlycine.

References

    1. Rachamandran and Sasisekharan, Adv. Protein Chem. 23:283-437, 1968
    2. IUPAC-IUB Commission on biochemical nomenclature, Biochemistry
       9:3471-3479, 1970
       
Warnings

   When you specify the number of turns and steps, be aware that you
   should remove common factors from these two numbers. For example, if
   you (for some improbable reason) wished to plot a wheel with 8 turns
   in 18 steps (2.25 residues per turn) you should remove the common
   factor (i.e. 2) and specify 4 turns in 9 steps.
   
Diagnostic Error Messages

Exit status

   0 upon successful completion.
   
Known bugs

See also

   Program name Description
   checktrans Reports STOP codons and ORF statistics of a protein
   sequence
   digest Protein proteolytic enzyme or reagent cleavage digest
   garnier Predicts protein secondary structure
   helixturnhelix Report nucleic acid binding motifs
   iep Calculates the isoelectric point of a protein
   octanol Displays protein hydropathy
   pepcoil Predicts coiled coil regions
   pepinfo Plots simple amino acid properties in parallel
   pepnet Displays proteins as a helical net
   pepstats Protein statistics
   pepwindow Displays protein hydropathy
   pepwindowall Displays protein hydropathy of a set of sequences
   sigcleave Reports protein signal cleavage sites
   
Author(s)

   This application was written by Alan Bleasby (ableasby@hgmp.mrc.ac.uk)
   
History

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.
   
Comments
