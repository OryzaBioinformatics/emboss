
                               EMBOSS: cirdna
     _________________________________________________________________
   
                                Program cirdna
                                       
Function

   Draws circular maps of DNA constructs
   
Description

   The program 'cirdna' draws circular maps of DNA constructs.
   
   It uses the graphical shapes: ticks, ranges, and blocks to represent
   genetic markers (e.g, genes and ESTs) and places them according to
   their position in a DNA fragment. The markers can be organized in
   different groups.
   
   The program reads in one input file in which the user specifies the
   names and positions of the genetic markers. In this file the user also
   enters data for controlling the appearance of the markers.
   
   A refined customization of the drawing can be achieved by running the
   program with '-options' on the command line and changing the values of
   the desired parameters.
   
Usage

   Here is a sample session with cirdna.

% cirdna
Graph type [x11]:
Input file [inputfile]: data.cirp
ticks inside or outside the circle (enter In or Out) [Out]:
text inside or outside the blocks (enter In or Out) [In]:

Command line arguments

   Mandatory qualifiers:
   -graphout           graph      Graph type
   -inputfile          infile     input file containing mapping data
   -posticks           string     ticks inside or outside the circle (enter In
                                  or Out)
   -posblocks          string     text inside or outside the blocks (enter In
                                  or Out)

   Optional qualifiers:
   -originangle        float      position of the molecule's origin on the
                                  circle (enter a number in the range 0 - 360)
   -intersymbol        string     do you want horizontal junctions between
                                  blocks (Y or N)
   -intercolor         integer    color for junctions between blocks (enter a
                                  color number)
   -interticks         string     do you want horizontal junctions between
                                  ticks (Y or N)
   -gapsize            integer    interval between ticks in the ruler (enter
                                  an integer)
   -ticklines          string     do you want vertical lines at the ruler's
                                  ticks (Y or N)
   -tickheight         float      height of ticks (enter a number to multiply
                                  the default height)
   -blockheight        float      height of blocks (enter a number to multiply
                                  the default height)
   -rangeheight        float      height of range ends (enter a number to
                                  multiply the default height)
   -gapgroup           float      space between groups (enter a number to
                                  multiply the default space)
   -postext            float      space between text and ticks, blocks, and
                                  ranges (enter a number to multiply the
                                  default space)

   Advanced qualifiers: (none)
   
   Mandatory qualifiers Allowed values Default
   -graphout Graph type EMBOSS has a list of known devices, including
   postscript, ps, hpgl, hp7470, hp7580, meta, colourps, cps, xwindows,
   x11, tektronics, tekt, tek4107t, tek, none, null, text, data, xterm
   EMBOSS_GRAPHICS value, or x11
   -inputfile input file containing mapping data Input file inputfile
   -posticks ticks inside or outside the circle (enter In or Out) Any
   string is accepted Out
   -posblocks text inside or outside the blocks (enter In or Out) Any
   string is accepted In
   Optional qualifiers Allowed values Default
   -originangle position of the molecule's origin on the circle (enter a
   number in the range 0 - 360) Any integer value 90
   -intersymbol do you want horizontal junctions between blocks (Y or N)
   Any string is accepted Y
   -intercolor color for junctions between blocks (enter a color number)
   Any integer value 1
   -interticks do you want horizontal junctions between ticks (Y or N)
   Any string is accepted N
   -gapsize interval between ticks in the ruler (enter an integer) Any
   integer value 500
   -ticklines do you want vertical lines at the ruler's ticks (Y or N)
   Any string is accepted N
   -tickheight height of ticks (enter a number to multiply the default
   height) Any integer value 1
   -blockheight height of blocks (enter a number to multiply the default
   height) Any integer value 1
   -rangeheight height of range ends (enter a number to multiply the
   default height) Any integer value 1
   -gapgroup space between groups (enter a number to multiply the default
   space) Any integer value 1
   -postext space between text and ticks, blocks, and ranges (enter a
   number to multiply the default space) Any integer value 1
   Advanced qualifiers Allowed values Default
   (none)
   
Input file format

   Here is the input file data.cirp for the example run:
   

----------------------------------------------------------------------
Start   1001
End     4270


group
label
Block    1011   1362    3
ex1
endlabel
label
Tick     1610   8
EcoR1
endlabel
label
Block    1647   1815    1
endlabel
label
Tick     2459   8
BamH1
endlabel
label
Block    4139   4258    3
ex2
endlabel
endgroup


group
label
Range    2541    2812    [       ]       5
Alu
endlabel
label
Range    3322    3497    >       <       5
MER13
endlabel
endgroup
-------------------------------------------------------------------------

   Blank lines in the input file are ignored.
   
   The file is organized in several fields separated by one or more space
   or TAB characters.
   
   The first non-blank line gives the start position of the DNA fragment
   to be drawn after the keyword 'Start'. The end position is on the
   second line following the keyword 'End'.
   
   Then, one or more groups (up to a maximum of 100) of genetic markers
   are defined. Each group begins with a line consisting of the keyword
   'group' and ends with a line consisting of the keyword 'endgroup'.
   
   If desired, a group name can be given on the very next line but will
   not be displayed (only for compatibilty with lindna).
   
   Next, the individual markers (up to a maximum of 100) of the group are
   described. Each marker begins with a line consisting of the keyword
   'label' and ends with a line consisting of the keyword 'endlabel'.
   
   Do not start a new marker (by using a 'label' line) before you have
   closed the previous marker (by using an 'endlabel' line). You must end
   a previous marker specification before starting a new one. i.e. do not
   overlap marker specifications in the input file.
   
   For each marker, the line following the 'label' line describes the
   marker. Three types of markers can be drawn: ticks, blocks, and
   ranges.
   
   For a tick, the descriptive line begins with the keyword 'Tick',
   followed by the position of the tick in the DNA fragment, and a number
   from 0 to 15 specifying the color in which the tick will be drawn (a
   list of available colors is given below). If desired, a name can be
   written above the tick. This name must be given on the next line. If
   more than one name are given (one name per line), only the first one
   will be displayed.
   
   For a block, the descriptive line begins with the keyword 'Block',
   followed by the start and end positions of the block in the DNA
   fragment, and the number of the block's color. If desired, a name can
   be written above or inside the block. This name must be given on the
   next line. If more than one name are given (one name per line), only
   the first one will be displayed.
   
   For a range, the descriptive line begins with the keyword 'Range',
   followed by the start and end positions of the range in the DNA
   fragment. Next on the line are the types of boundaries that are to be
   drawn. The user can choose among '>', '<', '[', and ']' for both start
   and end boundaries. If none of these types is wanted for a given
   boundary, then a point '.' must be entered. Next is the color number.
   If desired, a name can be written above the range. This name must be
   given on the next line. If more than one name are given (one name per
   line), only the first one will be displayed.
   
   For any type of markers, try to avoid long names.
   
   The colors defined in the PLPLOT graphics library are:
   
   0 "BLACK", 1 "RED", 2 "YELLOW", 3 "GREEN", 4 "AQUAMARINE", 5 "PINK", 6
   "WHEAT", 7 "GREY", 8 "BROWN", 9 "BLUE", 10 "BLUEVIOLET", 11 "CYAN", 12
   "TURQUOISE", 13 "MAGENTA", 14 "SALMON", and 15 "WHITE".
   
   This format can also be used for the program "lindna".
   
Output file format

   It produces a graphical image.
   
Data files

   None.
   
Notes

   None.
   
References

   None.
   
Warnings

   None.
   
Diagnostic Error Messages

   None.
   
Exit status

   It always exits with a status of 0.
   
Known bugs

   None.
   
See also

   Program name                          Description
   abiview      Reads ABI file and display the trace
   entret       Reads and writes (returns) flatfile entries
   lindna       Draws linear maps of DNA constructs
   notseq       Excludes a set of sequences and writes out the remaining ones
   remap        Display a sequence with restriction cut sites, translation etc
   seqret       Reads and writes (returns) sequences
   seqretall    Reads and writes (returns) a set of sequences one at a time
   seqretset    Reads and writes (returns) a set of sequences all at once
   seqretsplit  Reads and writes (returns) sequences in individual files
   showfeat     Show features of a sequence
   showseq      Display a sequence with features, translation etc
   
Author(s)

   This application was written by Nicolas Tourasse
   (nicolas.tourasse@biotek.uio.no) at the Norwegian EMBnet node.
   
History

   Written 1999 - Nicolas Tourasse
   
Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.
   
Comments
