
                                  lindna 
                                      
   
   
Function

   Draws linear maps of DNA constructs
   
Description

   The program 'lindna' draws linear maps of DNA constructs.
   
   It uses the graphical shapes: ticks, ranges, and blocks to represent
   genetic markers (e.g, genes and ESTs) and places them according to
   their position in a DNA fragment. The markers can be organized in
   different groups.
   
   The program reads in one input file in which the user specifies the
   names and positions of the genetic markers. In this file the user also
   enters data for controlling the appearance of the markers.
   
   A refined customization of the drawing can be achieved by running the
   program with '-options' on the command line and changing the values of
   the desired parameters.
   
Usage

   Here is a sample session with lindna.

% lindna
Draws linear maps of DNA constructs
Graph type [x11]:
Input file [inputfile]: data.linp
do you want a ruler (Y or N) [Y]:
type of blocks (enter Open, Filled, or Outline) [Filled]:

Command line arguments

   Mandatory qualifiers:
   -graphout           graph      Graph type
   -inputfile          infile     input file containing mapping data
   -ruler              string     do you want a ruler (Y or N)
   -blocktype          string     type of blocks: Open, Filled, or Outline.
                                  Option 'Outline' draws filled blocks
                                  surrounded by a black border

   Optional qualifiers:
   -intersymbol        string     type of junctions between blocks (enter
                                  Straight, Up, Down, or No)
   -intercolor         integer    color of junctions between blocks (enter a
                                  color number)
   -interticks         string     do you want horizontal junctions between
                                  ticks (Y or N)
   -gapsize            integer    interval between ticks in the ruler (enter
                                  an integer)
   -ticklines          string     do you want vertical lines at the ruler's
                                  ticks (Y or N)
   -textheight         float      height of text. Enter a number <1 or >1 to
                                  decrease or increase the size, respectively
   -textlength         float      length of text. Enter a number <1 or >1 to
                                  decrease or increase the size, respectively
   -margin             float      width of left margin. This is the region
                                  left to the groups where the names of the
                                  groups are displayed. Enter a number <1 or
                                  >1 to decrease or increase the size,
                                  respectively
   -tickheight         float      height of ticks. Enter a number <1 or >1 to
                                  decrease or increase the size, respectively
   -blockheight        float      height of blocks. Enter a number <1 or >1 to
                                  decrease or increase the size, respectively
   -rangeheight        float      height of range ends. Enter a number <1 or
                                  >1 to decrease or increase the size,
                                  respectively
   -gapgroup           float      space between groups. Enter a number <1 or
                                  >1 to decrease or increase the size,
                                  respectively
   -postext            float      space between text and ticks, blocks, and
                                  ranges. Enter a number <1 or >1 to decrease
                                  or increase the size, respectively

   Advanced qualifiers: (none)
   General qualifiers:
  -help                boolean    Report command line options. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   

   Mandatory qualifiers Allowed values Default
   -graphout Graph type EMBOSS has a list of known devices, including
   postscript, ps, hpgl, hp7470, hp7580, meta, colourps, cps, xwindows,
   x11, tektronics, tekt, tek4107t, tek, none, null, text, data, xterm,
   png EMBOSS_GRAPHICS value, or x11
   -inputfile input file containing mapping data Input file inputfile
   -ruler do you want a ruler (Y or N) Any string is accepted Y
   -blocktype type of blocks: Open, Filled, or Outline. Option 'Outline'
   draws filled blocks surrounded by a black border Any string is
   accepted Filled
   Optional qualifiers Allowed values Default
   -intersymbol type of junctions between blocks (enter Straight, Up,
   Down, or No) Any string is accepted Straight
   -intercolor color of junctions between blocks (enter a color number)
   Integer from 0 to 15 1
   -interticks do you want horizontal junctions between ticks (Y or N)
   Any string is accepted N
   -gapsize interval between ticks in the ruler (enter an integer)
   Integer 0 or more 500
   -ticklines do you want vertical lines at the ruler's ticks (Y or N)
   Any string is accepted N
   -textheight height of text. Enter a number <1 or >1 to decrease or
   increase the size, respectively Any numeric value 1
   -textlength length of text. Enter a number <1 or >1 to decrease or
   increase the size, respectively Any numeric value 1
   -margin width of left margin. This is the region left to the groups
   where the names of the groups are displayed. Enter a number <1 or >1
   to decrease or increase the size, respectively Number 0.000 or more 1
   -tickheight height of ticks. Enter a number <1 or >1 to decrease or
   increase the size, respectively Any numeric value 1
   -blockheight height of blocks. Enter a number <1 or >1 to decrease or
   increase the size, respectively Any numeric value 1
   -rangeheight height of range ends. Enter a number <1 or >1 to decrease
   or increase the size, respectively Any numeric value 1
   -gapgroup space between groups. Enter a number <1 or >1 to decrease or
   increase the size, respectively Any numeric value 1
   -postext space between text and ticks, blocks, and ranges. Enter a
   number <1 or >1 to decrease or increase the size, respectively Any
   numeric value 1
   Advanced qualifiers Allowed values Default
   (none)
   
Input file format

   Here is the input file data.linp for the example run:
     _________________________________________________________________
   
Start   1001
End     4270

group
exons
label
Block   1011    1362    3       H
ex1
endlabel
label
Tick    1610    8       H
EcoR1
endlabel
label
Block   1647    1815    1       H
endlabel
label
Tick    2459    8       H
BamH1
endlabel
label
Block   4139    4258    3       H
ex2
endlabel
endgroup

group
repeat-regions
label
Range   2541    2812    [       ]       5       V
Alu
endlabel
label
Range   3322    3497    >       <       5       V
MER13
endlabel
endgroup
     _________________________________________________________________
   
   Blank lines in the input file are ignored.
   
   The file is organized in several fields separated by one or more space
   or TAB characters.
   
   The first non-blank line gives the start position of the DNA fragment
   to be drawn after the keyword 'Start'. The end position is on the
   second line following the keyword 'End'.
   
   Then, one or more groups (up to a maximum of 20) of genetic markers
   are defined. Each group begins with a line consisting of the keyword
   'group' and ends with a line consisting of the keyword 'endgroup'.
   
   If desired, a group name can be given on the very next line. Spaces
   and tabulations are allowed but only the first 20 characters of that
   name (including spaces) will be displayed.
   
   Next, the individual markers (up to a maximum of 1000) of the group
   are described. Each marker begins with a line consisting of the
   keyword 'label' and ends with a line consisting of the keyword
   'endlabel'.
   
   Do not start a new marker (by using a 'label' line) before you have
   closed the previous marker (by using an 'endlabel' line). You must end
   a previous marker specification before starting a new one. i.e. do not
   overlap marker specifications in the input file.
   
   For each marker, the line following the 'label' line describes the
   marker. Three types of markers can be drawn: ticks, blocks, and
   ranges.
   
   For a tick, the descriptive line begins with the keyword 'Tick',
   followed by the position of the tick in the DNA fragment, and a number
   from 0 to 15 specifying the color in which the tick will be drawn (a
   list of available colors is given below). If desired, one or more
   names can be written above the tick. In this case an optional letter H
   or V should be added to the line. H or V indicate whether the text
   will be horizontal or vertical, respectively. If no letter is
   specified, H is assumed by default. A list of one or more names can be
   given on the next lines with one name per line.
   
   For a block, the descriptive line begins with the keyword 'Block',
   followed by the start and end positions of the block in the DNA
   fragment, and the number of the block's color. If desired, one or more
   names can be written above the block. Names are given on the following
   lines. An optional letter H or V can be added to the end of the
   descriptive line to specify the orientation of the name(s).
   
   For a range, the descriptive line begins with the keyword 'Range',
   followed by the start and end positions of the range in the DNA
   fragment. Next on the line are the types of boundaries that are to be
   drawn. The user can choose among '>', '<', '[', ']' and '|' for both
   start and end boundaries. If none of these types is wanted for a given
   boundary, then a point '.' must be entered. Next is the color number.
   If desired, one or more names can be written above the range. Names
   are given on the following lines. An optional letter H or V can be
   added to the end of the descriptive line to specify the orientation of
   the name(s).
   
   For any type of markers, names will be written in the same color as
   the marker. Also, try to avoid long names.
   
   The colors defined in the PLPLOT graphics library are:
   
   0 "BLACK", 1 "RED", 2 "YELLOW", 3 "GREEN", 4 "AQUAMARINE", 5 "PINK", 6
   "WHEAT", 7 "GREY", 8 "BROWN", 9 "BLUE", 10 "BLUEVIOLET", 11 "CYAN", 12
   "TURQUOISE", 13 "MAGENTA", 14 "SALMON", and 15 "WHITE".
   
   This format can also be used for the program "cirdna". 
   
Output file format

   Output is to the specified graphics device.
   
   Click here to see the output of the above example.
   
Data files

   None.
   
Notes

   None.
   
References

   None.
   
Warnings

   None.
   
Diagnostic Error Messages

   None.
   
Exit status

   It always exits with a status of 0.
   
Known bugs

   None.
   
See also

   Program name Description
   abiview Reads ABI file and display the trace
   cirdna Draws circular maps of DNA constructs
   pepnet Displays proteins as a helical net
   pepwheel Shows protein sequences as helices
   prettyplot Displays aligned sequences, with colouring and boxing
   prettyseq Output sequence with translated ranges
   remap Display a sequence with restriction cut sites, translation etc
   seealso Finds programs sharing group names
   showalign Displays a multiple sequence alignment
   showdb Displays information on the currently available databases
   showfeat Show features of a sequence
   showseq Display a sequence with features, translation etc
   textsearch Search sequence documentation text. SRS and Entrez are
   faster!
   
   cirdna plots representations of circular DNA.
   
Author(s)

   This application was written by Nicolas Tourasse
   (nicolas.tourasse@biotek.uio.no) at the Biotechnology Center of Oslo.
   
History

   Written (2000) - Nicolas Tourasse
   Updated (2002) - Nicolas Tourasse
   
Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.
   
Comments
