# Configure template for the EMBOSS package.
# Process this file with autoconf to produce a configure script.

#if you want to force configure to use the default C compiler cc
## then uncomment the following line.
#CC=cc

AC_INIT(ajax/core/ajmath.c)
AM_INIT_AUTOMAKE([EMBOSS],[6.3.0])

# Make sure CFLAGS is defined to stop LT_INIT adding -g
CFLAGS="$CFLAGS "

# Use libtool to make a shared library.
LT_INIT

# Checks for programs.
#as# AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_C_INLINE
#as# AC_PROG_INSTALL
#as# AC_PROG_LN_S
#as# AC_PROG_MAKE_SET
#as# AC_PROG_RANLIB

# Checks for libraries.

# none needed for the libraries we build
# external library dependencies tested in m4 macros: X11 gd, z, png



dnl Test whether --with-sgiabi given for IRIX (n32m3 n32m4 64m3 64m4)

if test "$CC" != "gcc"; then

if test "`uname`" = "IRIX" || test "`uname`" = "IRIX64" ; then
if test "$CC" != "gcc"; then
  CFLAGS="$CFLAGS"
  CHECK_SGI
fi
fi


dnl Test if --enable-64 is given

if test "${enable_64+set}" != set; then
enable_64=no
fi


AC_ARG_ENABLE(64,
   AS_HELP_STRING([--enable-64], [64 bit pointers]))
if test "${enable_64}" = "yes" ; then
AC_MSG_CHECKING(for 64bit compilation support)

dnl Test for Linux 64 bit

if test "`uname`" = "Linux"; then
CPPFLAGS="-DAJ_Linux64 $CPPFLAGS"
fi

dnl Test for FreeBSD 64 bit

if test "`uname`" = "FreeBSD"; then
CPPFLAGS="-DAJ_FreeBSD64 $CPPFLAGS"
fi

dnl Test for Solaris 64 bit. This is done in the optimisation section...
dnl Another Solaris feature is that -fast implies -xarch=v8 and
dnl therefore switches off -xarch=v9 if it is given first.


dnl Test for OSF1 64 bit (it's always this anyway)

if test "`uname`" = "OSF1"; then
CPPFLAGS="-DAJ_OSF164 $CPPFLAGS"
fi

dnl Test for SGI 64 bit

if test "`uname`" = "IRIX" || test "`uname`" = "IRIX64"; then
CPPFLAGS="-DAJ_IRIX64 $CPPFLAGS"
fi

dnl Test for AIX 64 bit

if test "`uname`" = "AIX"; then
CPPFLAGS="-DAJ_AIX64 $CPPFLAGS"
if test "$CC" != "gcc"; then
CC="$CC -q64"
fi
NM="nm -B -X 64"
AR="ar -X 64"
fi

dnl Test for HP-UX 64 bit

if test "`uname`" = "HP-UX"; then
if test "$CC" != "gcc"; then
CC="$CC +DD64"
fi
CPPFLAGS="-DAJ_HPUX64 $CPPFLAGS"
fi

AC_MSG_RESULT(done)
fi







dnl Set optimisation flags

dnl Test for AIX optimisation

if test "`uname`" = "AIX"; then
CFLAGS="$CFLAGS -O3 -qstrict -qarch=auto -qtune=auto"
fi

dnl test for SGI optimisation

if test "`uname`" = "IRIX" || test "`uname`" = "IRIX64" ; then
LD="/usr/bin/ld -IPA"
CFLAGS="$CFLAGS -O3"
fi

dnl Test for HP-UX optimisation

if test "`uname`" = "HP-UX"; then
CFLAGS="$CFLAGS -fast"
fi

dnl Test for OSF1 optimisation

if test "`uname`" = "OSF1"; then
CFLAGS="$CFLAGS -fast -U_FASTMATH"
fi

dnl test for Solaris optimisation

if test "`uname`" = "SunOS"; then
CFLAGS="$CFLAGS -O"

dnl test for 64 bit ptr here (see Solaris 64bit above)

if test "${enable_64}" = "yes" ; then
CFLAGS="$CFLAGS -xtarget=ultra -xarch=v9"
fi
fi

dnl Test for Linux optimisation

if test "`uname`" = "Linux"; then
CFLAGS="$CFLAGS -O2"
fi

dnl Test for FreeBSD optimisation

if test "`uname`" = "FreeBSD"; then
CFLAGS="$CFLAGS -O2"
fi



else

dnl Intel MacOSX requires reduced optimisation for PCRE code

if test "`uname -a | grep Darwin`"; then
  if test "`uname -a | grep i386`"; then
    CFLAGS="$CFLAGS -O1"
  else
    CFLAGS="$CFLAGS -O2"
  fi

else
CFLAGS="$CFLAGS -O2"
fi

fi
dnl End of Optimisation tests


dnl Add extensions to Solaris for some reentrant functions

if test "`uname`" = "SunOS"; then
CFLAGS="$CFLAGS -D__EXTENSIONS__"
fi


dnl endian test for indexing system
AC_C_BIGENDIAN(CPPFLAGS="$CPPFLAGS -DBENDIAN",CPPFLAGS="$CPPFLAGS -DLENDIAN")

dnl PCRE library definitions - see the MAJOR and MINOR values
dnl to see which version's configure.in these lines come from

dnl Provide the current PCRE version information. Do not use numbers
dnl with leading zeros for the minor version, as they end up in a C
dnl macro, and may be treated as octal constants. Stick to single
dnl digits for minor numbers less than 10. There are unlikely to be
dnl that many releases anyway.

PCRE_MAJOR=7
PCRE_MINOR=9
PCRE_DATE=11-Apr-2009
PCRE_VERSION=${PCRE_MAJOR}.${PCRE_MINOR}

dnl Default values for miscellaneous macros

POSIX_MALLOC_THRESHOLD=-DPOSIX_MALLOC_THRESHOLD=10

dnl Provide versioning information for libtool shared libraries that
dnl are built by default on Unix systems.

PCRE_LIB_VERSION=0:1:0
PCRE_POSIXLIB_VERSION=0:0:0


dnl Define where the EMBOSS package is located
AC_SUBST(AJAX_FIXED_ROOT)
AJAX_FIXED_ROOT="\\\"`pwd`/emboss\\\""
AC_SUBST(EMBOSS_TOP)
EMBOSS_TOP=`pwd`
AC_SUBST(AJAX_SYSTEM)
AJAX_SYSTEM="\\\"`uname`\\\""


dnl Program checks
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl Intel MacOSX 10.6 puts X11 in a non-standard place
if test "${with_x}" != "no" ; then
if test "`uname -a | grep Darwin`"; then
OSXX=`sw_vers -productVersion | sed 's/\(10\.[[0-9]]*\).*/\1/'`
if test ${OSXX} '>' '10.4'; then
CFLAGS="$CFLAGS -I/usr/X11/include -L/usr/X11/lib"
fi
fi
fi

# Checks for header files.
#as# AC_PATH_X
AC_PATH_XTRA
AC_HEADER_DIRENT
AC_HEADER_STDC

AC_CHECK_HEADERS([unistd.h TargetConfig.h])
#as# AC_CHECK_HEADERS([arpa/inet.h fcntl.h float.h limits.h \
#as# 		  malloc.h memory.h netdb.h netinet/in.h \
#as# 		  shadow.h stddef.h stdint.h stdlib.h string.h strings.h \
#as# 		  sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h \
#as# 		  termios.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
#as# AC_HEADER_STDBOOL
#as# AC_TYPE_UID_T
#as# AC_C_INLINE
#as# AC_TYPE_INT32_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
#as# AC_STRUCT_TIMEZONE
#as# AC_TYPE_UINT32_T
AC_STRUCT_TM

#as# AC_CHECK_TYPES([ptrdiff_t])



dnl Check for library functions
#AC_FUNC_ERROR_AT_LINE
AC_FUNC_GETPGRP
AC_FUNC_STRFTIME
AC_FUNC_VFORK
AC_FUNC_VPRINTF
#as# AC_FUNC_MALLOC
#as# AC_FUNC_MKTIME
#as# AC_FUNC_REALLOC
#as# AC_FUNC_STRTOD

AC_CHECK_FUNCS(memmove)
#as# AC_CHECK_FUNCS([alarm atexit bzero dup2 floor \
#as# 		getcwd gethostbyname getspnam gettimeofday inet_ntoa \
#as# 		localtime_r memmove memset mkdir modf pow regcomp rint \
#as# 		select socket sqrt strchr strcspn strdup strerror strpbrk \
#as# 		strrchr strspn strstr strtol])

if test "${with_x}" != "no" ; then
LF_EMBOSS_PATH_XLIB
fi

dnl Library checks
AC_CHECK_LIB(c, socket, LIBS="$LIBS" , LIBS="$LIBS -lsocket")
AC_CHECK_LIB(m, main)

dnl GD for FreeBSD requires libiconv
if test "`uname`" = "FreeBSD" && ${with_pngdriver} != "no"; then
AC_CHECK_LIB(iconv, main, LIBS="$LIBS", LIBS="-liconv $LIBS")
fi

AM_CONDITIONAL(AMPNG, false)
AM_CONDITIONAL(AMPDF, false)

CHECK_GENERAL
CHECK_JAVA
CHECK_JAVAOS
CHECK_HPDF
CHECK_PNGDRIVER
CHECK_AUTH
CHECK_AMD64

AX_LIB_MYSQL
AX_LIB_POSTGRESQL

CFLAGS="$CFLAGS $MYSQL_CFLAGS"
LDFLAGS="$LDFLAGS $MYSQL_LDFLAGS"

CFLAGS="$CFLAGS $POSTGRESQL_CFLAGS"
LDFLAGS="$LDFLAGS $POSTGRESQL_LDFLAGS"


dnl Check for 'ant' for packaging Jemboss and export result

AC_CHECK_PROG(javac_in_path,javac,true,false)
AC_CHECK_PROG(ant_in_path,ant,true,false)
AM_CONDITIONAL(EHAVEANT, test "$ant_in_path" = "true" && "$javac_in_path" = "true")
AC_SUBST(EHAVEANT)

dnl "Export" these variables for PCRE

AC_SUBST(HAVE_MEMMOVE)
AC_SUBST(HAVE_STRERROR)
AC_SUBST(PCRE_MAJOR)
AC_SUBST(PCRE_MINOR)
AC_SUBST(PCRE_DATE)
AC_SUBST(PCRE_VERSION)
AC_SUBST(PCRE_LIB_VERSION)
AC_SUBST(PCRE_POSIXLIB_VERSION)
AC_SUBST(POSIX_MALLOC_THRESHOLD)

#dnl Test if --enable-corba is given
#AC_ARG_ENABLE(corba,
#   AS_HELP_STRING([--enable-corba], [corba (need glib and orbit)]))
#if test "${enable_corba}" = "yes" ; then
#AC_MSG_CHECKING(for ORBit and glib)
#CPPFLAGS="$CPPFLAGS -I/usr/lib/glib/include -I/usr/local/lib/glib/include"
#
#AC_CHECK_HEADERS(glib.h)
#AC_CHECK_HEADERS(orb/orbit.h)
#AC_CHECK_LIB(glib, main)
#
#AC_CHECK_LIB(ORBitutil, main)
#AC_CHECK_LIB(IIOP, main)
#AC_CHECK_LIB(ORBit, main)
#fi

dnl Test if --enable-debug given
AC_ARG_ENABLE(debug,
   AS_HELP_STRING([--enable-debug], [debug (-g option on compiler)]))
if test "${enable_debug}" = "yes" ; then
  CFLAGS="$CFLAGS -g"
fi          


dnl Turn off irritating linker warnings in IRIX
if test "`uname`" = "IRIX" || test "`uname`" = "IRIX64"; then
CFLAGS="-Wl,-LD_MSG:off=85:off=84:off=16:off=134 $CFLAGS"
fi




dnl Test if --enable-large is given
if test "${enable_large+set}" != set; then
enable_large=yes
fi


AC_ARG_ENABLE(large,
   AS_HELP_STRING([--enable-large], [over 2Gb file support (default)]))
if test "${enable_large}" = "yes" ; then
AC_MSG_CHECKING(for large file support)

dnl Test for Linux large file support
if test "`uname`" = "Linux"; then
CPPFLAGS="-DAJ_LinuxLF -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE $CPPFLAGS"
fi

dnl Test for FreeBSD large file support
if test "`uname`" = "FreeBSD"; then
CPPFLAGS="-DAJ_FreeBSDLF $CPPFLAGS"
fi

dnl Test for Solaris large file support
if test "`uname`" = "SunOS"; then
CPPFLAGS="-DAJ_SolarisLF -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE $CPPFLAGS"
fi

dnl Test for OSF1 large file support (its always this anyway)
if test "`uname`" = "OSF1"; then
CPPFLAGS="-DAJ_OSF1LF $CPPFLAGS"
fi

dnl Test for SGI large file support
dnl CPPFLAGS="-DAJ_IRIXLF -D_LARGEFILE64_SOURCE $CPPFLAGS"
if test "`uname`" = "IRIX" || test "`uname`" = "IRIX64"; then
CPPFLAGS="-DAJ_IRIXLF -D_LARGEFILE64_SOURCE $CPPFLAGS"
fi

dnl Test for AIX large file support
dnl CPPFLAGS="-DAJ_AIXLF $CPPFLAGS"
if test "`uname`" = "AIX"; then
CPPFLAGS="-DAJ_AIXLF -D_LARGE_FILES $CPPFLAGS"
fi

dnl Test for HP-UX large file support
dnl CPPFLAGS="-DAJ_HPUXLF -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 $CPPFLAGS"
if test "`uname`" = "HP-UX"; then
CPPFLAGS="-DAJ_HPUXLF -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 $CPPFLAGS"
fi

dnl Test for MacOSX large file support off_t and fpos_t are always 64-bit
dnl CPPFLAGS="-DAJ_MACOSXLF $CPPFLAGS"
if test "`uname`" = "Darwin"; then
CPPFLAGS="-DAJ_MACOSXLF $CPPFLAGS"
fi

AC_MSG_RESULT(done)
fi







dnl Test if --enable-systemlibs given
have_systemlibs=no
AC_ARG_ENABLE(systemlibs,
   AS_HELP_STRING([--enable-systemlibs], [utility for RPM/dpkg bundles]))
if test "${enable_systemlibs}" = "yes" ; then
    have_systemlibs=yes
fi          
AM_CONDITIONAL(ESYSTEMLIBS, test "$have_systemlibs" = "yes")
AC_SUBST(ESYSTEMLIBS)





dnl Test if purify exists and if --enable-purify given if so
dnl set "-g"

AC_MSG_CHECKING(for purify)
dnl if(purify -version) < /dev/null > /dev/null 2>&1; then
   AC_ARG_ENABLE(purify,
      AS_HELP_STRING([--enable-purify], [purify]))
if test "${enable_purify}" = "yes" ; then
     CC="purify --chain-length="20" -best-effort -windows=yes gcc -g"
     LIBTOOL="$LIBTOOL --tag=CC"
     AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi          
dnl fi


dnl Test if --enable-gccprofile given if so
dnl set "-pg"

if test "${with_gccprofile}" = "yes" ; then
     CFLAGS="$CFLAGS -pg"
     LDFLAGS="$LDFLAGS -pg"
fi          



dnl Test if --enable-warnings given
have_warnings=no
AC_SUBST(WARN_CFLAGS)
AC_ARG_ENABLE(warnings,
   AS_HELP_STRING([--enable-warnings],
                  [warnings (-Wall option on gcc compiler)]))
if test "${enable_warnings}" = "yes" ; then
  if test "$CC" = "gcc"; then
    have_warnings=yes
    WARN_CFLAGS="-Wall -fno-strict-aliasing"
  fi
fi          
AM_CONDITIONAL(WARNINGS, test "$have_warnings" = "yes")
AC_SUBST(WARNINGS)


dnl Set extra needed compiler flags
if test "$CC" = "cc"; then
  case "$host" in
    alpha*-dec-osf*) CFLAGS="$CFLAGS -ieee";;
  esac
fi
AM_CONDITIONAL(PURIFY, test "${enable_purify}" = "yes")


dnl Set a gcc test flag for use in Makefile.am that can be used in modifiying
dnl (dev) warnings in Makefile.am files.
AM_CONDITIONAL(ISGCC, test "$CC" = "gcc")







dnl Test if --enable-devwarnings given
have_devwarnings=no
AC_SUBST(DEVWARN_CFLAGS)
AC_ARG_ENABLE(devwarnings,
   AS_HELP_STRING([--enable-devwarnings],
                  [strict warnings (gcc compiler only) for developers]))
if test "${enable_devwarnings}" = "yes" ; then
  if test "$CC" = "gcc"; then
    have_devwarnings=yes
dnl more warnings beyond what -Wall provides
  DEVWARN_CFLAGS="-Wextra"

dnl prototype warnings. prototypes required for all functions
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wstrict-prototypes -Wmissing-prototypes"
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wold-style-definition -Wmissing-declarations"

  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wwrite-strings"

dnl catches things like index as a variable name
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wshadow"

  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wdeclaration-after-statement -Wundef"
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wpointer-arith"
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wcast-qual -Wcast-align"

dnl casts of function results that can lose data e.g. double to int
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wbad-function-cast"

dnl comparing signed and unsigned values
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wsign-compare"

  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wmissing-field-initializers"
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wmissing-noreturn -Wnested-externs"
dnl useful messages
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wredundant-decls"

dnl -Wunsafe-loop-optimizations objects to loops with increments more than 1
dnl because if the end is at INT_MAX it could run forever ... rarely
dnl  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wunsafe-loop-optimizations"

dnl -Wconversion is brain-damaged - complains about char arguments every time
dnl  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wconversion"

dnl -Wtraditional gives #elif and #error msgs
dnl  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wtraditional"

dnl -Wwrite-strings upsets struct initialisation
dnl  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wwrite-strings"

dnl -Wfloat-equal will not allow tests for values still 0.0
dnl DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wfloat-equal"
  fi
fi          


dnl Test if --enable-devextrawarnings given
dnl Will only have an effect if --enable-devwarnings also given
AC_ARG_ENABLE(devextrawarnings,
   AS_HELP_STRING([--enable-devextrawarnings],
                  [add extra warnings to devwarnings]))
if test "${enable_devextrawarnings}" = "yes" ; then
  if test "$have_devwarnings" = "yes"; then

dnl -Wpadded means moving char to end of structs - but also flags end of struct
dnl  so need to add padding at end
  DEVWARN_CFLAGS="$DEVWARN_CFLAGS -Wpadded"

  fi
fi


AM_CONDITIONAL(DEVWARNINGS, test "$have_devwarnings" = "yes")
AC_SUBST(DEVWARNINGS)

dnl Test for cygwin to set AM_LDFLAGS in library & apps Makefile.ams
dnl Replaces original version which used 'expr' and so wasn't entirely
dnl portable.
platform_cygwin='no'
AC_MSG_CHECKING([for cygwin])
case "$host" in
  *-*-mingw*|*-*-cygwin*)
    platform_cygwin='yes'
    ;;
  *)
    platform_cygwin='no'
    ;;
esac
AC_MSG_RESULT([$platform_cygwin])
AM_CONDITIONAL(ISCYGWIN, test "$platform_cygwin" = "yes")
AC_SUBST(ISCYGWIN)

dnl Tests for AIX
dnl If shared needs -Wl,-G in plplot,ajax,nucleus, -lX11 in plplot,
dnl and -Wl,brtl -Wl,-bdynamic in emboss
dnl We therefore need a static test as well
needajax=no
AM_CONDITIONAL(ISAIXIA64, test "`uname`" = "AIX")
AM_CONDITIONAL(ISSHARED, test "${enable_shared}" = "yes")
AC_SUBST(ISAIXIA64)

if test "`uname`" = "AIX"; then
if test -d ajax/.libs ; then
	echo AIX ajax/.libs exists
else
	mkdir ajax/.libs
fi

#if test "$host_os" = "aix5.1.0.0"; then
#	echo $host_os
#	exit 0
#fi
case $host_os in
	aix5*) needajax=no ;;
	aix4.3.3*) needajax=yes ;;
	*) needajax=no ;;
esac
fi
AM_CONDITIONAL(NEEDAJAX,test "$needajax" = "yes")
AC_SUBST(NEEDAJAX)


dnl HP-UX needs -lsec for shadow passwords

if test "`uname`" = "HP-UX"; then
LDFLAGS="$LDFLAGS -lsec"
fi


dnl Test if --enable-mprobe is given

if test "${enable_mprobe+set}" != set; then
enable_mprobe=no
fi

AC_MSG_CHECKING([for mprobe])
AC_ARG_ENABLE(mprobe,
   AS_HELP_STRING([--enable-mprobe], [mprobe memory allocation test]))
if test "${enable_mprobe}" = "yes" ; then
   CPPFLAGS="-DAJ_MPROBE $CPPFLAGS"
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

dnl Test if --enable-savestats is given

if test "${enable_savestats+set}" != set; then
enable_savestats=no
fi

AC_MSG_CHECKING([for savestats])
AC_ARG_ENABLE(savestats,
   AS_HELP_STRING([--enable-savestats],
                  [save statistics and print with debug output]))
if test "${enable_savestats}" = "yes" ; then
   CPPFLAGS="-DAJ_SAVESTATS $CPPFLAGS"
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

dnl check and set compilation flags for Jemboss auth server code
CHECK_THREADS


AC_OUTPUT([plplot/Makefile plplot/lib/Makefile nucleus/Makefile ajax/Makefile
ajax/pcre/Makefile ajax/expat/Makefile ajax/zlib/Makefile ajax/core/Makefile
ajax/graphics/Makefile ajax/ensembl/Makefile ajax/ajaxdb/Makefile
ajax/acd/Makefile
emboss/Makefile emboss/acd/Makefile test/Makefile test/data/Makefile
test/embl/Makefile test/genbank/Makefile
test/pir/Makefile test/swiss/Makefile
test/swnew/Makefile test/testdb/Makefile
emboss/data/Makefile
emboss/data/AAINDEX/Makefile
emboss/data/CODONS/Makefile emboss/data/REBASE/Makefile 
emboss/data/JASPAR_CORE/Makefile emboss/data/JASPAR_FAM/Makefile
emboss/data/JASPAR_PHYLOFACTS/Makefile emboss/data/JASPAR_CNE/Makefile
emboss/data/JASPAR_POLII/Makefile emboss/data/JASPAR_SPLICE/Makefile
emboss/data/JASPAR_PBM/Makefile emboss/data/JASPAR_PBM_HLH/Makefile
emboss/data/JASPAR_PBM_HOMEO/Makefile
emboss/data/PRINTS/Makefile emboss/data/PROSITE/Makefile
doc/Makefile doc/manuals/Makefile doc/tutorials/Makefile
doc/programs/Makefile doc/programs/html/Makefile doc/programs/text/Makefile
jemboss/Makefile
jemboss/images/Makefile
jemboss/lib/Makefile jemboss/lib/axis/Makefile
jemboss/resources/Makefile jemboss/utils/Makefile
Makefile])
