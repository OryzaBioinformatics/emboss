Embreo requires some parameters set in order to function correctly; in
particular it needs to know what server to talk to and whether to use a
web cache/proxy to do so.

The file embreo.properties in either the current directory or the
user's home directory is read in to set the properties. Embreo has the
settings built in, but those may not be appropriate.

If you're installing embreo, then you should edit the embreo.properties
file to suit the network configuration at your site.

The values and syntax are as follows:

#
# do we need to use a proxy to communicate with the outside world
# note that if java has proxy settings, those are used in preference
# to the manual settings
#
proxy.use=true
#
# if true, then need to define the name and port number of the proxy server
#
proxy.host=wwwcache.university.ac.uk
proxy.port=8080
#
# if you need a username and password for the proxy set them here
# we only support basic authentication, if you need NTLM authentication
# then you're out of luck really
#
proxy.auth=false
proxy.user=fred
proxy.passwd=abc123
#
# now for the server configuration
# end-users shouldn't guess here, these settings should be supplied
# by whoever sets up the server
#
# do we need to supply a username and password to run
# applications on the server? If you make your server
# available on a private intranet then you can set this to no
#
# some lightweight or demo services may be accessible without
# a username or password either
#
# there is no support for saving the actual username and password
#
user.auth=true
#
# now you need two URLs for the server, one for configuration
# information (the public server) and one for actually running
# the programs (the private server). These may be the same.
#
server.public=http://www.hgmp.mrc.ac.uk/cgi-bin/soap.cgi
server.private=http://menu.hgmp.mrc.ac.uk/cgi-bin/soap.cgi
#
# Again, two names for which service to use. Again, these may be the
# same
#
service.public=EmbossSoap
service.private=EmbossSoap
