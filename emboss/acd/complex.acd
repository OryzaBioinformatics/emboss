application: complex [
  documentation: "Find the linguistic complexity in
                  nucleotide sequences"
  groups: "Nucleic:Composition"
]

seqall: sequence  [
  parameter: "Y"
  type: "dna"
]

boolean: omnia  [
  default: "N"
  information: "All sequences"
  help: "calculate over a set of sequences"
]

integer: lwin  [
  standard: "Y"
  default: "100"
  maximum: "$(sequence.length)"
  information: "Window length"
]

integer: step  [
  standard: "Y"
  default: "5"
  maximum: "$(lwin)"
  information: "Step size"
  help: "the displacement of the window over the sequence"
]

integer: sim  [
  default: "0"
  information: "Simulations"
  help: "calculate the linguistic complexity by comparison with a
         number of simulations having a uniform distribution of bases"
]

integer: jmin  [
  standard: "Y"
  default: "4"
  minimum: "2"
  maximum: "20"
  information: "Minimum word length"
  help: ""
]

integer: jmax  [
  standard: "Y"
  default: "6"
  minimum: "2"
  maximum: "50"
  information: "Maximum word length"
  help: ""
]

boolean: freq  [
  default: "N"
  information: "Calculate frequency"
  help: "execute the simulation of a sequence based on the base
         frequency of the original sequence"
]

boolean: print  [
  default: "N"
  information: "Print to file"
  help: "generate a file named UjTable containing the values of Uj for
         each word j in the real sequence(s) and in any simulated sequences"
]

outfile: outfile  [
  parameter: "Y"
  knowntype: "complex output"
]

outfile: ujtablefile  [
  standard: "$(sim)"
  default: "complex.ujtable"
  information: "UjTable temporary file name"
  knowntype: "complex temporary output"
  help: ""
  nullok: "Y"
]
seqoutall: outseq  [
  standard: "$(omnia)"
  nullok: "Y"
]

