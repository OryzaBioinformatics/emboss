appl: restover [
	doc: "Finds restriction enzymes that produce a specific overhang"
	groups: "DNA: sequence features, restriction enzymes"
]

  seqall: sequence [ param: Y type: DNA ]

  string: seqcomp [ param: Y info: "Overlap sequence" ]

  int: min [ opt: N min: 1 max: 1000 def: 1 info:"Minimum cuts per RE" ]

  int: max [ opt: N min: $(min) max: 2000000000 def: 2000000000
             info:"Maximum cuts per RE" ]

  bool: single [ opt: N def: N info: "Force single site only cuts"]

  bool: threeprime [ opt: N def: N info: "3' overhang? (else 5')
  e.g. BamHI has CTAG as a 5' overhang, and ApaI has CCGG as 3' overhang."]

  bool: html [ opt: N def: N info: "Create HTML output"]

  bool: blunt [ opt: N def: Y info: "Allow blunt end cutters" ]

  bool: sticky [ opt: N def: Y info: "Allow sticky end cutters" ]

  bool: ambiguity [ opt: N def: Y info: "Allow ambiguous matches" ]

  bool: plasmid [ opt: N def: N info: "Allow circular DNA" ]

  bool: commercial [ opt: N def: Y info: "Only enzymes with suppliers" ]

  bool: limit [ opt: N def: Y info: "Limits reports to one isoschizomer" ]

  bool: preferred [ opt: N def: N info: "Report preferred isoschizomers" ]

  bool: alphabetic [ opt: N def: N info: "Sort output alphabetically" ]

  bool: fragments [ opt: N def: N info: "Show fragment lengths" ]

  bool: name [ opt: N def: N info: "Show sequence name" ]

  string: datafile [ req: N def: "" info: "Alternative RE data file" ]


  outfile: outfile [ param: Y ]
