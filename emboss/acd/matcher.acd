application: matcher [
  documentation: "Finds the best local alignments between two
                  sequences"
  groups: "Alignment:Local"
]

section: input [
  information: "Input section"
  type: "page"
]

  sequence: asequence  [
    parameter: "Y"
    type: "any"
  ]

  sequence: bsequence  [
    parameter: "Y"
    type: "@($(asequence.protein) ? stopprotein : nucleotide)"
  ]

endsection: input

section: advanced [
  information: "Advanced section"
  type: "page"
]

  matrix: datafile  [
    optional: "Y"
    information: "Matrix file"
    protein: "$(asequence.protein)"
    help: "This is the scoring matrix file used when comparing
           sequences. By default it is the file 'EBLOSUM62' (for proteins) or
           the file 'EDNAFULL' (for nucleic sequences). These files are
           found in the 'data' directory of the EMBOSS installation."
  ]

  integer: alternatives  [
    optional: "Y"
    information: "Number of alternative matches"
    default: "1"
    minimum: "1"
    help: "This sets the number of alternative matches output. By
           default only the highest scoring alignment is shown. A value of 2
           gves you other reasonable alignments. In some cases, for example
           multidomain proteins of cDNA and gemomic DNA comparisons, there
           may be other interesting and significant alignments."
  ]

  integer: gappenalty  [
    optional: "Y"
    information: "Gap penalty"
    default: "@($(asequence.protein)? 14 : 16)"
    minimum: "0"
    valid: "Positive integer"
    expected: "14 for protein, 16 for nucleic"
    help: "The gap penalty is the score taken away when a gap is
           created. The best value depends on the choice of comparison
           matrix. The default value of 14 assumes you are using the
           EBLOSUM62 matrix for protein sequences, or a value of 16 and the
           EDNAFULL matrix for nucleotide sequences."
  ]

  integer: gaplength  [
    optional: "Y"
    information: "Gap length penalty"
    default: "@($(asequence.protein)? 4 : 4)"
    minimum: "0"
    valid: "Positive integer"
    expected: "4 for any sequence"
    help: "The gap length, or gap extension, penalty is added to the
           standard gap penalty for each base or residue in the gap. This is
           how long gaps are penalized. Usually you will expect a few long
           gaps rather than many short gaps, so the gap extension penalty
           should be lower than the gap penalty. An exception is where one or
           both sequences are single reads with possible sequencing errors
           in which case you would expect many single base gaps. You can get
           this result by setting the gap penalty to zero (or very low) and
           using the gap extension penalty to control gap scoring."
  ]

endsection: advanced

section: output [
  information: "Output section"
  type: "page"
]

  align: outfile  [
    parameter: "Y"
    aformat: "markx0"
    minseqs: "2"
    maxseqs: "2"
  ]

endsection: output
