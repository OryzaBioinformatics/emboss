appl: profgen [
  documentation: "Generates various profiles for each alignment in a directory."
  groups:"Protein:3D Structure"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
]





section: input [ info: "input Section" type: page ]
string: infpath [
        req: Y
        def: "./"
        help: "Location of sequence alignment files (input)"
]

string: infextn [
        req: Y
        def: ".ealign"
        help: "Extension of sequence alignment files"
]
endsection: input





section: required [ info: "required Section" type: page ]
list: type  [
  required: "Y"
  default: "F"
  minimum: "1"
  maximum: "1"
  values: "F:Frequency,G:Gribskov,H:Henikoff"
  delimiter: ","
  codedelimiter: ":"
  header: "Profile type"
  prompt: "Select type"
  button: "Y"
]

variable:  dogap "@($(type) != f)"

integer: threshold  [
  required: "@($(type)==F)"
  default: "75"
  minimum: "1"
  maximum: "100"
  information: "Enter threshold reporting percentage"
]

matrixf: datafile  [
  required: "@($(type)!=F)"
  information: "Scoring matrix"
  default: "@($(type) = G: Epprofile H: EBLOSUM62 F: EBLOSUM62)"
  expected: "'Epprofile' for Gribskov type, or EBLOSUM62"
]

float: open  [
  required: "$(dogap)"
  information: "Gap opening penalty"
  default: "3.0"
]

float: extension  [
  required: "$(dogap)"
  information: "Gap extension penalty"
  default: "0.3"
]
endsection: required





section: output [ info: "output Section" type: page ]
string: smpfpath [
        req: "@($(type)==F)"
        def: "./tmp/"
        help: "Location of simple profile files (output)"
]

string: smpfextn [
        req: "@($(type)==F)"
        def: ".freq"
        help: "Extention of simple profile files"
]

string: gbpfpath [
        req: "@($(type)==G)"
        def: "./tmp/"
        help: "Location of Gribskov profile files (output)"
]

string: gbpfextn [
        req: "@($(type)==G)"
        def: ".gribs"
        help: "Extension of Gribskov profile files"
]

string: hnpfpath [
        req: "@($(type)==H)"
        def: "./tmp/"
        help: "Location of Henikoff profile files (output)"
]

string: hnpfextn [
        req: "@($(type)==H)"
        def: ".henik"
        help: "Extention of Henikoff profile files"
]
endsection: output








